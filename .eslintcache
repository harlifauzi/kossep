[{"D:\\Project\\react-kossep\\src\\index.js":"1","D:\\Project\\react-kossep\\src\\reportWebVitals.js":"2","D:\\Project\\react-kossep\\src\\App.js":"3","D:\\Project\\react-kossep\\src\\config\\index.js":"4","D:\\Project\\react-kossep\\src\\components\\index.js":"5","D:\\Project\\react-kossep\\src\\components\\molecules\\index.js":"6","D:\\Project\\react-kossep\\src\\config\\Firebase\\index.js":"7","D:\\Project\\react-kossep\\src\\config\\Routes\\index.js":"8","D:\\Project\\react-kossep\\src\\components\\molecules\\RecipeCard\\index.js":"9","D:\\Project\\react-kossep\\src\\pages\\index.js":"10","D:\\Project\\react-kossep\\src\\components\\molecules\\MyNavbar\\index.js":"11","D:\\Project\\react-kossep\\src\\components\\molecules\\RecipeCardSkeleton\\index.js":"12","D:\\Project\\react-kossep\\src\\components\\molecules\\SearchBar\\index.js":"13","D:\\Project\\react-kossep\\src\\assets\\index.js":"14","D:\\Project\\react-kossep\\src\\pages\\BuatResep\\index.js":"15","D:\\Project\\react-kossep\\src\\pages\\Masuk\\index.js":"16","D:\\Project\\react-kossep\\src\\pages\\LihatResep\\index.js":"17","D:\\Project\\react-kossep\\src\\pages\\BuatAkun\\index.js":"18","D:\\Project\\react-kossep\\src\\pages\\AboutUs\\index.js":"19","D:\\Project\\react-kossep\\src\\pages\\PengaturanAkun\\index.js":"20","D:\\Project\\react-kossep\\src\\pages\\HalamanAkun\\index.js":"21","D:\\Project\\react-kossep\\src\\pages\\HalamanUtama\\index.js":"22","D:\\Project\\react-kossep\\src\\pages\\Recook\\index.js":"23","D:\\Project\\react-kossep\\src\\pages\\HalamanAkunLain\\index.js":"24","D:\\Project\\react-kossep\\src\\pages\\HalamanEksplor\\index.js":"25","D:\\Project\\react-kossep\\src\\assets\\illustrations\\index.js":"26","D:\\Project\\react-kossep\\src\\config\\redux\\store.js":"27"},{"size":764,"mtime":1624463560756,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1606644614303,"results":"30","hashOfConfig":"29"},{"size":884,"mtime":1624537387592,"results":"31","hashOfConfig":"29"},{"size":156,"mtime":1624457497330,"results":"32","hashOfConfig":"29"},{"size":28,"mtime":1613395459704,"results":"33","hashOfConfig":"29"},{"size":255,"mtime":1613626488168,"results":"34","hashOfConfig":"29"},{"size":556,"mtime":1613562906199,"results":"35","hashOfConfig":"29"},{"size":1144,"mtime":1624513003105,"results":"36","hashOfConfig":"29"},{"size":2096,"mtime":1613625852261,"results":"37","hashOfConfig":"29"},{"size":643,"mtime":1610696652801,"results":"38","hashOfConfig":"29"},{"size":3120,"mtime":1624518266484,"results":"39","hashOfConfig":"29"},{"size":2090,"mtime":1613627715561,"results":"40","hashOfConfig":"29"},{"size":845,"mtime":1613485410602,"results":"41","hashOfConfig":"29"},{"size":32,"mtime":1609503220992,"results":"42","hashOfConfig":"29"},{"size":12301,"mtime":1624536955235,"results":"43","hashOfConfig":"29"},{"size":4409,"mtime":1624536349753,"results":"44","hashOfConfig":"29"},{"size":14781,"mtime":1624534553460,"results":"45","hashOfConfig":"29"},{"size":5571,"mtime":1624537773822,"results":"46","hashOfConfig":"29"},{"size":3766,"mtime":1611027551376,"results":"47","hashOfConfig":"29"},{"size":6340,"mtime":1611026848938,"results":"48","hashOfConfig":"29"},{"size":4400,"mtime":1613486086469,"results":"49","hashOfConfig":"29"},{"size":4211,"mtime":1624533771402,"results":"50","hashOfConfig":"29"},{"size":13513,"mtime":1624536797772,"results":"51","hashOfConfig":"29"},{"size":8166,"mtime":1624535218385,"results":"52","hashOfConfig":"29"},{"size":3553,"mtime":1624522178021,"results":"53","hashOfConfig":"29"},{"size":599,"mtime":1610866526076,"results":"54","hashOfConfig":"29"},{"size":544,"mtime":1624458122512,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1ox0ktk",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\Project\\react-kossep\\src\\index.js",[],["121","122"],"D:\\Project\\react-kossep\\src\\reportWebVitals.js",[],"D:\\Project\\react-kossep\\src\\App.js",["123"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { Firebase, Routes } from \"./config\";\nimport { MyNavbar } from \"./components\";\nimport { useDispatch } from \"react-redux\";\n\n\nconst App = () => {\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        checkUser();\n    }, []);\n\n\n    const checkUser = () => {\n        Firebase.auth().onAuthStateChanged( async (user) => {\n            if(user){\n                const responseDataUser = await Firebase.database().ref(`users/${user.uid}`).once('value').then(res => res.val());\n                dispatch({type: 'UPDATE_DATA_USER', payload: responseDataUser});\n                dispatch({type: 'UPDATE_LOGIN_STATUS', payload: true});\n            }\n        })\n    }\n\n\n    return (\n        <div className=\"app-container\">\n            <MyNavbar/>\n            <Routes />\n        </div>\n    );\n};\n\n\nexport default App;","D:\\Project\\react-kossep\\src\\config\\index.js",[],"D:\\Project\\react-kossep\\src\\components\\index.js",[],"D:\\Project\\react-kossep\\src\\components\\molecules\\index.js",[],"D:\\Project\\react-kossep\\src\\config\\Firebase\\index.js",[],"D:\\Project\\react-kossep\\src\\config\\Routes\\index.js",[],"D:\\Project\\react-kossep\\src\\components\\molecules\\RecipeCard\\index.js",[],"D:\\Project\\react-kossep\\src\\pages\\index.js",[],"D:\\Project\\react-kossep\\src\\components\\molecules\\MyNavbar\\index.js",["124"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ILLogo, ILNull } from \"../../../assets\";\r\nimport { Nav, Navbar, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Firebase } from \"../../../config\";\r\n\r\nconst MyNavbar = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { loginStatus, dataUser } = useSelector(state => state);\r\n    \r\n\r\n    const signOut = () => {\r\n        Firebase.auth().signOut();\r\n        localStorage.removeItem(\"user\");\r\n        dispatch({type: 'UPDATE_LOGIN_STATUS', payload: false});\r\n        dispatch({type: 'UPDATE_DATA_USER', payload: null});\r\n        history.push(\"/\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"mynavbar-wrapper\">\r\n            <Navbar className=\"mynavbar\" collapseOnSelect expand=\"lg\" variant=\"dark\">\r\n                <div className=\"mynavbar-logoContainer\" onClick={() => history.push('/')}>\r\n                    <img src={ILLogo} />\r\n                </div>\r\n\r\n                {loginStatus && (\r\n                <DropdownButton\r\n                    className=\"ml-auto\"\r\n                    variant=\"light\"\r\n                    menuAlign=\"right\"\r\n                    title={\r\n                        dataUser.photo ? (\r\n                            <img src={dataUser.photo} alt=\"\" />\r\n                        ) : (\r\n                            <img src={ILNull} alt=\"\" />\r\n                        )\r\n                    }\r\n                    id=\"dropdown-menu-align-right\"\r\n                >\r\n                    <Dropdown.Item href=\"#\" onClick={() => history.push(`/halamanakun/${dataUser.uid}`)}>\r\n                        Akun saya\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item href=\"#\" onClick={signOut}>\r\n                        Keluar\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={() => history.push(\"/aboutus\")}>\r\n                        About us\r\n                    </Dropdown.Item>\r\n                </DropdownButton>\r\n                )}\r\n\r\n                {!loginStatus && (\r\n                <>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link href=\"#\" onClick={() => history.push(\"/buatakun\")}>\r\n                                Buat akun\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"#\" onClick={() => history.push(\"/masuk\")}>\r\n                                Masuk\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"#\" onClick={() => history.push(\"/aboutus\")}>\r\n                                About us\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </>\r\n                )}\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyNavbar;\r\n","D:\\Project\\react-kossep\\src\\components\\molecules\\RecipeCardSkeleton\\index.js",[],"D:\\Project\\react-kossep\\src\\components\\molecules\\SearchBar\\index.js",[],"D:\\Project\\react-kossep\\src\\assets\\index.js",[],"D:\\Project\\react-kossep\\src\\pages\\BuatResep\\index.js",["125"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Firebase } from \"../../config\";\r\nimport firebase from 'firebase';\r\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n// snackbar\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n// backdrop\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\nconst BuatResep = () => {\r\n    // backdrop\r\n    const classes = useStyles();            \r\n    const [openBackdrop, setOpenBackdrop] = useState(false);\r\n\r\n\r\n    // snackbar\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const [messageType, setMessageType] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenSnackbar(false);\r\n        if(messageType===\"success\"){\r\n            history.push(`/halamanutama/${resep.chef.uid}`);\r\n        }\r\n    };\r\n\r\n    const uploadPhoto = useRef();\r\n    const history = useHistory();\r\n    const [judul, setJudul] = useState('');\r\n    const [cerita, setCerita] = useState('');\r\n    const [waktu, setWaktu] = useState('');\r\n    const [bahan, setBahan] = useState([{item: ''}]);\r\n    const [langkah, setLangkah] = useState([{item: ''}]);\r\n    const [biaya, setBiaya] = useState('');\r\n    const [urlPhoto, setUrlPhoto] = useState('');\r\n    const { dataUser, loginStatus } = useSelector(state => state);\r\n\r\n    const [photo, setPhoto] = useState(\"\");\r\n    const resep = {\r\n        postId: '',\r\n        judul,\r\n        cerita,\r\n        waktu,\r\n        bahan,\r\n        langkah,\r\n        biaya,\r\n        urlPhoto,\r\n        chef: dataUser,\r\n        waktuPost: '',\r\n        timestamp: ''\r\n    };\r\n\r\n\r\n    // firing when photo state change\r\n    useEffect(() => {\r\n        if ( !loginStatus ) history.replace('eksplor');\r\n\r\n        document.title = \"Kossep | Buat resep\";\r\n        if (photo) {\r\n            postImage();\r\n        }\r\n    }, [photo]);\r\n\r\n\r\n    // function form bahan\r\n    const handleBahanChangeInput = (index, event) => {\r\n        const values = [...bahan];\r\n        values[index][event.target.name] = event.target.value;\r\n        setBahan(values);\r\n    };\r\n    const handleBahanAddInput = () => {\r\n        setBahan([...bahan, {item: ''}]);\r\n    };\r\n    const handleBahanRemoveInput = (index) => {\r\n        const values = [...bahan];\r\n        values.splice(index, 1);\r\n        setBahan(values);\r\n    };\r\n\r\n\r\n    // function form langkah\r\n    const handleLangkahChangeInput = (index, event) => {\r\n        const values = [...langkah];\r\n        values[index][event.target.name] = event.target.value;\r\n        setLangkah(values);\r\n    };\r\n    const handleLangkahAddInput = () => {\r\n        setLangkah([...langkah, {item: ''}]);\r\n    };\r\n    const handleLangkahRemoveInput = (index) => {\r\n        const values = [...langkah];\r\n        values.splice(index, 1);\r\n        setLangkah(values);\r\n    };\r\n\r\n\r\n    // upload to cloudinary\r\n    const postImage = async () => {\r\n        setOpenBackdrop(true);\r\n        const data = new FormData();\r\n        data.append(\"file\", photo);\r\n        data.append(\"upload_preset\", \"kossep\");\r\n        data.append(\"cloud_name\", \"harleykwen\");\r\n        await fetch(\"https://api.cloudinary.com/v1_1/harleykwen/image/upload\", {\r\n            method: \"post\",\r\n            body: data,\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log({ successUpload: data });\r\n                setUrlPhoto(data.url);\r\n                setOpenBackdrop(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setOpenBackdrop(false);\r\n            });\r\n    };\r\n\r\n\r\n    //function when button buat resep clicked\r\n    const onBuatResep = async () => {\r\n        if ( resep.judul === '' || resep.cerita === '' || resep.waktu === '' || resep.biaya === '' || resep.urlPhoto === '' ){\r\n            setMessageType('error');\r\n            setMessage('pastikan semua data sudah diisi');\r\n            setOpenSnackbar(true);\r\n        } else {\r\n            const today = new Date();\r\n            const date = today.getDate() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getFullYear();\r\n            \r\n            resep.waktuPost = date;\r\n            resep.timestamp = firebase.database.ServerValue.TIMESTAMP;\r\n            resep.postId = uuidv4();\r\n\r\n            Firebase.database()\r\n                .ref(`posts/${resep.postId}/`)\r\n                .set(resep)\r\n                .then(res => {\r\n                    setMessage(\"Resep telah dibuat\");\r\n                    setMessageType(\"success\");\r\n                    setOpenSnackbar(true);\r\n                })\r\n                .catch(err => {\r\n                    setMessage(\"Gagal buat resep\");\r\n                    setMessageType(\"error\");\r\n                    setOpenSnackbar(true);\r\n                });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"buatresep-container\">\r\n            <Form className=\"buatresep-form\">\r\n                <Form.Group>\r\n                    <Form.Label>Judul</Form.Label>\r\n                    <Form.Control\r\n                        className=\"buatresep-form-judul\"\r\n                        type=\"text\"\r\n                        placeholder=\"judul\"\r\n                        value={judul}\r\n                        onChange={(e) => setJudul(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Cerita</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"cerita dibalik resep ini\"\r\n                        value={cerita}\r\n                        onChange={(e) => setCerita(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Lama memasak</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"lama masak\"\r\n                        value={waktu}\r\n                        onChange={(e) => setWaktu(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"buatresep-bahan-wrapper\">\r\n                    <Form.Label>Bahan-bahan</Form.Label>\r\n                    {bahan.map((bahan, index) => (\r\n                        <InputGroup className=\"mb-3\" key={index}>\r\n                        <p>{index+1}.</p>\r\n                        <FormControl\r\n                            className=\"buatresep-bahan-formcontrol\"\r\n                            placeholder=\"nama bahan\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            name=\"item\"\r\n                            type=\"text\"\r\n                            value={bahan.item}\r\n                            onChange={(event) => handleBahanChangeInput(index, event)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={() => handleBahanRemoveInput(index)}\r\n                            >\r\n                            hapus\r\n                            </Button>\r\n                        </InputGroup.Append>\r\n                        </InputGroup>\r\n                    ))}\r\n                    <Button variant=\"warning\" onClick={handleBahanAddInput}>\r\n                        tambah\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"buatresep-langkah-wrapper\">\r\n                    <Form.Label>Langkah-langkah</Form.Label>\r\n                    {langkah.map((langkah, index) => (\r\n                        <InputGroup className=\"mb-3\" key={index}>\r\n                        <p>{index+1}.</p>\r\n                        <FormControl\r\n                            className=\"buatresep-langkah-formcontrol\"\r\n                            placeholder=\"nama langkah\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            name=\"item\"\r\n                            type=\"text\"\r\n                            value={langkah.item}\r\n                            onChange={(event) => handleLangkahChangeInput(index, event)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={() => handleLangkahRemoveInput(index)}\r\n                            >\r\n                            hapus\r\n                            </Button>\r\n                        </InputGroup.Append>\r\n                        </InputGroup>\r\n                    ))}\r\n                    <Button variant=\"warning\" onClick={handleLangkahAddInput}>\r\n                        tambah\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Biaya</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>Rp.</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl \r\n                        aria-label=\"Amount (to the nearest dollar)\"\r\n                        value={biaya}\r\n                        onChange={(e) => setBiaya(e.target.value)} \r\n                        maxLength={2}\r\n                        />\r\n                        <InputGroup.Append>\r\n                        <InputGroup.Text>K/porsi</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        aria-describedby=\"basic-addon1\"\r\n                        ref={uploadPhoto}\r\n                        style={{display: 'none'}}\r\n                        type=\"file\"\r\n                        accept=\"image/*\" \r\n                        onChange={(e) => setPhoto(e.target.files[0])}\r\n                    />\r\n                </InputGroup>\r\n\r\n                <div className='buatresep-form-photo'>\r\n                        {urlPhoto === '' ? (\r\n                            <p onClick={() => uploadPhoto.current.click()}>unggah foto</p>\r\n                        ) : (\r\n                            <>\r\n                                <img src={urlPhoto} alt='' />\r\n                                <p \r\n                                    className='ubah-foto'\r\n                                    onClick={() => uploadPhoto.current.click()}\r\n                                >\r\n                                    ubah foto\r\n                                </p>\r\n                            </>\r\n                        )}\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"warning\"\r\n                    className=\"ml-auto mr-auto\"\r\n                    onClick={onBuatResep}\r\n                    style={{width: '100%'}}\r\n                >\r\n                    Buat resep\r\n                </Button>\r\n            </Form>\r\n\r\n            {/* backdrop */}\r\n            <Backdrop className={classes.backdrop} open={openBackdrop}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n\r\n            {/* snackbar */}\r\n            <Snackbar open={openSnackbar} autoHideDuration={1500} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={messageType}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuatResep;","D:\\Project\\react-kossep\\src\\pages\\Masuk\\index.js",["126"],"import React, { useEffect, useState } from \"react\";\r\nimport { Firebase } from \"../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ILSignIn } from '../../assets/illustrations';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// <snackbar function>\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n// </snackbar function>\r\n\r\nconst Masuk = () => {\r\n    const history = useHistory();\r\n    const [alamatEmail, setAlamatEmail] = useState(\"\");\r\n    const [kataSandi, setKataSandi] = useState(\"\");\r\n    const { loginStatus } = useSelector(state => state);\r\n\r\n    // <snackbar function>\r\n    const [open, setOpen] = React.useState(false);\r\n    const [messageType, setMessageType] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n        if(messageType===\"success\"){\r\n            // history.push(`/halamanutama/${userData.uid}`);\r\n        }\r\n    };\r\n    // </snackbar function>\r\n\r\n\r\n    useEffect(() => {\r\n        if ( loginStatus ) {\r\n            history.replace('/');\r\n        }\r\n\r\n        document.title = \"Kossep | Masuk\"\r\n    })\r\n\r\n\r\n    const onMasuk = () => {\r\n        if( !alamatEmail ){\r\n            setMessageType(\"error\");\r\n            setMessage(\"Oops, isi email dulu yuk!\");\r\n            return setOpen(true);\r\n        } else if ( !kataSandi ){\r\n            setMessageType(\"error\");\r\n            setMessage(\"Oops, isi kata sandi dulu yuk!\");\r\n            return setOpen(true);\r\n        }\r\n\r\n        Firebase.auth().signInWithEmailAndPassword(alamatEmail, kataSandi)\r\n            .then(res => {\r\n                setMessageType(\"success\");\r\n                setMessage(\"Yeay, kamu berhasil masuk!\");\r\n                setOpen(true);\r\n                history.replace('/');\r\n            })\r\n            .catch(err => {\r\n                if (err.code === \"auth/user-not-found\") {\r\n                    setMessage(\"Oops, email yang kamu masukan tidak terdaftar!\");\r\n                    setMessageType(\"error\");\r\n                    setOpen(true);\r\n                } else if (err.code === \"auth/invalid-email\") {\r\n                    setMessage(\"Oops, email yang kamu masukan tidak valid!\");\r\n                    setMessageType(\"error\");\r\n                    setOpen(true);\r\n                } else if (err.code === \"auth/wrong-password\") {\r\n                    setMessage(\"Oops, kata sandi yang kamu masukkan salah!\");\r\n                    setMessageType(\"error\");\r\n                    setOpen(true);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"masuk-container\">\r\n            <div className=\"masuk-cards\">\r\n                <div className=\"masuk-cards-left\">\r\n                    <h3>\r\n                        Makan apa ya hari ini? <br></br> Kuy liat resep terbaru!\r\n                    </h3>\r\n                <div style={{ width: \"100%\" }}>\r\n                    <div className=\"masuk-cards-left-form\">\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"alamat email\"\r\n                            value={alamatEmail}\r\n                            onChange={(e) => setAlamatEmail(e.target.value)}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"kata sandi\"\r\n                            value={kataSandi}\r\n                            onChange={(e) => setKataSandi(e.target.value)}\r\n                        />\r\n                        <button onClick={onMasuk}> Masuk </button>\r\n                    </div>\r\n                </div>\r\n                <p className=\"masuk-cards-left-link\">Belum punya akun? <span onClick={() => history.push(\"/buatakun\")}>Klik disini</span></p>\r\n            </div>\r\n            <div className=\"masuk-cards-right\">\r\n                <img src={ILSignIn} />\r\n            </div>\r\n        </div>\r\n\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={messageType}>\r\n                {message}\r\n            </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Masuk;\r\n","D:\\Project\\react-kossep\\src\\pages\\LihatResep\\index.js",["127","128","129"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Firebase } from \"../../config\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Form, InputGroup, FormControl, Button, Modal } from \"react-bootstrap\";\r\nimport { ILNull } from \"../../assets\"\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// snackbar\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst LihatResep = () => {\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const [modal, setModal] = useState(false);\r\n    const [resepUid, setResepUid] = useState(\"\");\r\n    const [resep, setResep] = useState();\r\n    const [comment, setComment] = useState([]);\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const [commentReady, setCommentReady] = useState(false);\r\n    const [recookFrom, setRecookFrom] = useState(\"\");\r\n    const [recookParam, setRecookParam] = useState(\"\");\r\n    const [recookBy, setRecookBy] = useState([]);\r\n    const { loginStatus, dataUser } = useSelector(state => state);\r\n\r\n\r\n    // snackbar\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMessage] = useState(\"\")\r\n    const [messageType, setMessageType] = useState(\"\")\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n        return;\r\n        }\r\n\r\n        setOpen(false);\r\n        if (message === \"Resep telah dihapus\"){\r\n            history.goBack();\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setResep(\"\");\r\n        setComment(\"\");\r\n        setCommentReady(false)\r\n        setNewComment(\"\");\r\n        setRecookFrom(\"\");\r\n        setRecookParam(\"\");\r\n        setRecookBy(\"\");\r\n\r\n        // get recipe data\r\n        Firebase.database()\r\n        .ref(`posts/${params.key}/`)\r\n        .once(\"value\")\r\n        .then((res) => {\r\n            if (res.val()) {\r\n            const data = res.val();\r\n            setResep(data);\r\n            setResepUid(data.chef.uid);\r\n\r\n            // get info recook from\r\n            if(data.recookFrom){\r\n                Firebase.database()\r\n                    .ref(`posts/${data.recookFrom.postId}/`)\r\n                    .once(\"value\")\r\n                    .then((res) => {\r\n                        if (res.val()) {\r\n                            setRecookFrom(res.val());\r\n                        }\r\n                    });\r\n            }\r\n            }\r\n        });\r\n\r\n        // get info recook by\r\n        Firebase.database()\r\n        .ref(`posts/${params.key}/recookBy/`)\r\n        .once(\"value\")\r\n        .then((res) => {\r\n            if (res.val()) {\r\n            const recookFrom = res.val();\r\n            const data = [];\r\n            Object.keys(recookFrom).map((item) => {\r\n                const newData = {\r\n                id: item,\r\n                data: recookFrom[item],\r\n                };\r\n                data.push(newData);\r\n            });\r\n            setRecookBy(data);\r\n            }\r\n        });\r\n\r\n        // get comments\r\n        Firebase.database()\r\n        .ref(`posts/${params.key}/komentar`)\r\n        .once(\"value\")\r\n        .then((res) => {\r\n            if (res.val()) {\r\n                const data = [];\r\n                const oldData = res.val();\r\n                Object.keys(oldData).map((item) => {\r\n\r\n                    Firebase.database()\r\n                        .ref(`users/${oldData[item].byUser.uid}/`)\r\n                        .once(\"value\")\r\n                        .then(res => {\r\n                            const newData = {\r\n                                id: item,\r\n                                data: oldData[item],\r\n                                photo: res.val().photo\r\n                            }\r\n                            setCommentReady(false)\r\n\r\n                            data.unshift(newData)\r\n                            setComment(data)\r\n                            console.log(data)\r\n\r\n                            setCommentReady(true)\r\n                        })\r\n                });\r\n            }\r\n        });\r\n\r\n        document.title = `Kossep | Resep`\r\n    }, [recookParam]);\r\n\r\n\r\n    // view source recipe\r\n    const OnRecookFrom = () => {\r\n        history.push(`/lihatresep/${recookFrom.postId}`);\r\n        setRecookParam(recookFrom.postId);\r\n    };\r\n\r\n\r\n    // function when button kirim clicked\r\n    const onKirim = () => {\r\n        if ( loginStatus ){\r\n            const today = new Date();\r\n            const waktuKomen = today.getTime();\r\n            const byUser = JSON.parse(localStorage.getItem(\"user\"));\r\n            const id = uuidv4();\r\n\r\n            const data = {\r\n                waktuKomen,\r\n                komen: newComment,\r\n                byUser,\r\n            };\r\n\r\n            const dataTemporary = {\r\n                id: uuidv4(),\r\n                data: {\r\n                    waktuKomen,\r\n                    komen: newComment,\r\n                    byUser,\r\n                },\r\n                photo: byUser.photo\r\n            };\r\n\r\n            // set comment on recipe's database\r\n            console.log(data);\r\n            Firebase.database().ref(`posts/${params.key}/komentar/${id}`).set(data);\r\n\r\n            setCommentReady(false)\r\n            setComment([...comment, dataTemporary])\r\n            setNewComment(\"\");\r\n            setCommentReady(true)\r\n        } else {\r\n            setMessageType(\"error\");\r\n            setMessage(\"Kamu harus masuk terlebih dahulu\");\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n\r\n    // function when button hapus clicked\r\n    const onHapus = () => {\r\n        Firebase.database().ref(`posts/${params.key}/`).remove();\r\n        setMessage(\"Resep telah dihapus\");\r\n        setMessageType(\"error\");\r\n        setOpen(true);\r\n    };\r\n\r\n\r\n    // function view profile\r\n    const onLihatProfile = (uid) => {\r\n        if ( loginStatus ){\r\n            if (dataUser.uid !== uid) {\r\n                history.push(`/halamanakunlain/${uid}`);\r\n            } else {\r\n                history.push(`/halamanakun/${uid}`);\r\n            }\r\n        } else {\r\n            history.push(`/halamanakunlain/${uid}`)\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"lihatresep-container\">\r\n\r\n            <div className=\"lihatresep-formContainer\">\r\n                {/* when resep available */}\r\n                {resep && (\r\n                <Form className=\"lihatresep-form\">\r\n                    {recookFrom && (\r\n                    <Button\r\n                        className=\"lihatresep-recook-buttonInfo\"\r\n                        variant=\"warning\"\r\n                        onClick={OnRecookFrom}\r\n                    >\r\n                        Recook \"{recookFrom.judul}\" by {recookFrom.chef.namaLengkap}\r\n                    </Button>\r\n                    )}\r\n                    <Form.Group>\r\n                    <h1 className=\"lihatresep-form-title\">{resep.judul}</h1>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <img\r\n                            className=\"card-img-top\"\r\n                            src={resep.urlPhoto}\r\n                            alt=\"\"\r\n                        />\r\n                    </InputGroup>\r\n                    <p\r\n                        className=\"lihatresep-tanggalDibuat\"\r\n                        onClick={() => onLihatProfile(resep.chef.uid)}\r\n                    >\r\n                        Dibuat pada {resep.waktuPost} oleh{\" \"}\r\n                        <span className=\"lihatresep-chef\">\r\n                        {resep.chef.namaLengkap}\r\n                        </span>\r\n                    </p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                    <Form.Label className=\"subtitle\">Cerita</Form.Label>\r\n                    <div className=\"subtitle-underline\">\r\n                        <p>{resep.cerita}</p>\r\n                    </div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                    <Form.Label className=\"subtitle\">Lama memasak</Form.Label>\r\n                    <div className=\"subtitle-underline\">\r\n                        <p>{resep.waktu}</p>\r\n                    </div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                    <Form.Label className=\"subtitle\">Bahan-bahan</Form.Label>\r\n                    {resep.bahan.map((bahan, index) => (\r\n                        <div className=\"subtitle-underline\" key={index}>\r\n                            <p className=\"subtitle-underline-number\">\r\n                                {index + 1}.\r\n                            </p>\r\n                            <p className=\"subtitle-underline-value\">\r\n                                {bahan.item}\r\n                            </p>\r\n                            <input type=\"checkbox\" />\r\n                        </div>\r\n                    ))}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                    <Form.Label className=\"subtitle\">Langkah-langkah</Form.Label>\r\n                    {resep.langkah.map((langkah, index) => (\r\n                        <div className=\"subtitle-underline\" key={index}>\r\n                            <p className=\"subtitle-underline-number\">\r\n                                {index + 1}.\r\n                            </p>\r\n                            <p className=\"subtitle-underline-value\">\r\n                                {langkah.item}\r\n                            </p>\r\n                            <input type=\"checkbox\" />\r\n                        </div>\r\n                    ))}\r\n                    </Form.Group>\r\n\r\n                    {/* if login status = true (get from local storage) */}\r\n                    <div className=\"lihatresep-recook-group\">\r\n                    { loginStatus && (\r\n                        <>\r\n                        {dataUser.uid !== resepUid && (\r\n                            <Button\r\n                            className=\"lihatresep-buttonRecook\"\r\n                            variant=\"warning\"\r\n                            onClick={() => history.push(`/recook/${resep.postId}`)}\r\n                            >\r\n                            Recook resep ini\r\n                            </Button>\r\n                        )}\r\n                        </>\r\n                    )}\r\n                    {recookBy && (\r\n                        <p className=\"lihatresep-recookBy\">\r\n                            resep ini telah di <span className=\"recookText\">recook</span>{\" \"}\r\n                            oleh{\" \"}\r\n                            <span className=\"recookOrang\">{recookBy.length} orang</span>\r\n                        </p>\r\n                    )}\r\n                    </div>\r\n\r\n                    {/* if login status = true (get from local storage) */}\r\n                    { loginStatus && (\r\n                        <>\r\n                            {dataUser.uid === resepUid && (\r\n                            <Button\r\n                                className=\"lihatresep-buttonRecook ml-auto mr-0 lihatresep-recook-group\"\r\n                                variant=\"danger\"\r\n                                onClick={() => setModal(true)}\r\n                            >\r\n                                Hapus resep ini\r\n                            </Button>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </Form>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"lihatresep-commentContainer\">\r\n                <div className=\"lihatresep-comment\">\r\n                    <div className=\"lihatresep-comment-judul\">\r\n                        <i className='bx bx-comment-detail'></i>\r\n                        <p className=\"subtitle judul\">Komentar</p>\r\n                    </div>\r\n                    {/* when comments available */}\r\n                    {commentReady && (\r\n                        <div className=\"lihatresep-comment-list\">\r\n                        {comment.map((comment) => (\r\n                            <div className=\"lihatresep-comment-item\" key={comment.id}>\r\n                                <div>\r\n                                    {comment.photo && (<img src={comment.photo} alt=\"\" />)}\r\n                                    {!comment.photo && (<img src={ILNull} alt=\"\" />)}\r\n                                    <p \r\n                                        className=\"subtitle\"\r\n                                        onClick={() => onLihatProfile(comment.data.byUser.uid)}\r\n                                    >{comment.data.byUser.namaLengkap}</p>\r\n                                </div>\r\n                                <p>{comment.data.komen}</p>\r\n                            </div>\r\n                        ))}\r\n                        </div>\r\n                    )}\r\n                    <InputGroup className=\"mb-3 lihatresep-comment-inputGroup\">\r\n                        <FormControl\r\n                        placeholder=\"Tulis komentar disini\"\r\n                        aria-label=\"Recipient's username\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                        <Button variant=\"outline-secondary\" onClick={onKirim}>\r\n                            Kirim\r\n                        </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </div>\r\n\r\n                {/* modal */}\r\n                {modal && (\r\n                <div className=\"lihatresep-modal\">\r\n                    <Modal.Dialog className=\"m-auto\">\r\n                    <Modal.Body>\r\n                        <p>Hapus resep ini?</p>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" onClick={() => setModal(false)}>\r\n                        Kembali\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={onHapus}>\r\n                        Hapus\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                    </Modal.Dialog>\r\n                </div>\r\n                )}\r\n                {/* /modal */}\r\n\r\n                {/* snackbar */}\r\n                <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={messageType}>\r\n                    {message}\r\n                </Alert>\r\n                </Snackbar>\r\n                {/* /snackbar */}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LihatResep;\r\n","D:\\Project\\react-kossep\\src\\pages\\BuatAkun\\index.js",["130","131"],"D:\\Project\\react-kossep\\src\\pages\\AboutUs\\index.js",["132","133","134","135","136","137","138","139","140"],"import React, { useEffect } from 'react'\r\nimport { ILFarhan, ILHarley, ILKhalish, ILNadya, ILRahma } from '../../assets/illustrations'\r\n\r\nconst AboutUs = () => {\r\n    useEffect(() => {\r\n        document.title=\"Kossep | About us\"\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"aboutus-container\">\r\n            <h1>Apa sih Kossep itu?</h1>\r\n            <p className=\"aboutus-deskripsi\"><i class='bx bxs-quote-alt-left'></i>Kossep menyediakan kumpulan menu masakah cepat saji yang mudah untuk dibuat. “Jika ada cara mudah untuk bikin makanan enak, kenapa dibuat susah.”\r\n            Situs ini akan membantu kamu mengakses resep makanan yang praktis khususnya kamu yang anak kos!!\r\n            Ayo eksplorasi menu lezat favorit kamu sekarang!<i class='bx bxs-quote-alt-right'></i></p>\r\n            <h1 className=\"aboutus-ourteam\">Our Team</h1>\r\n            <div class=\"aboutus-card-grid\">\r\n\r\n                <div className=\"aboutus-card\">\r\n                    <div className=\"aboutus-img-wrapper\">\r\n                        <img src={ILKhalish} />\r\n                    </div>\r\n                    <p className=\"aboutus-nama\">muhammad khalish</p>\r\n                    <p className=\"aboutus-job\">LEADER</p>\r\n                    <div className=\"aboutus-social\">\r\n                        <a target=\"_blank\" href=\"https://www.linkedin.com/in/mochammad-khalish-mulyadi-2811b21b4\"><i class='bx bxl-linkedin-square'></i></a>\r\n                        <a target=\"_blank\" href=\"https://www.instagram.com/lizzietrix_\"><i class='bx bxl-instagram-alt' ></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"aboutus-card\">\r\n                    <div className=\"aboutus-img-wrapper\">\r\n                        <img src={ILRahma} />\r\n                    </div>\r\n                    <p className=\"aboutus-nama\">rahma azizah</p>\r\n                    <p className=\"aboutus-job\">CONCEPT CREATOR</p>\r\n                    <div className=\"aboutus-social\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"aboutus-card\">\r\n                    <div className=\"aboutus-img-wrapper\">\r\n                        <img src={ILFarhan} />\r\n                    </div>\r\n                    <p className=\"aboutus-nama\">farhan andika</p>\r\n                    <p className=\"aboutus-job\">UI-DESIGNER</p>\r\n                    <div className=\"aboutus-social\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"aboutus-card\">\r\n                    <div className=\"aboutus-img-wrapper\">\r\n                        <img src={ILNadya} />\r\n                    </div>\r\n                    <p className=\"aboutus-nama\">nadya yudho</p>\r\n                    <p className=\"aboutus-job\">UX-DESIGNER</p>\r\n                    <div className=\"aboutus-social\">\r\n                        <a target=\"_blank\" href=\">https://www.instagram.com/nadyayum/\"><i class='bx bxl-instagram-alt' ></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"aboutus-card\">\r\n                    <div className=\"aboutus-img-wrapper\">\r\n                        <img src={ILHarley}/>\r\n                    </div>\r\n                    <p className=\"aboutus-nama\">harli fauzi ramli</p>\r\n                    <p className=\"aboutus-job\">DEVELOPER</p>\r\n                    <div className=\"aboutus-social\">\r\n                        <a target=\"_blank\" href=\"https://github.com/harlifauzi\"><i class='bx bxl-github'></i></a>\r\n                        <a target=\"_blank\" href=\"https://www.linkedin.com/in/harli-fauzi-ramli-420217204/\"><i class='bx bxl-linkedin-square'></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutUs\r\n","D:\\Project\\react-kossep\\src\\pages\\PengaturanAkun\\index.js",["141","142","143","144","145"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';                  //snackbar\r\nimport MuiAlert from '@material-ui/lab/Alert';                      //snackbar\r\nimport Backdrop from '@material-ui/core/Backdrop';                  //backdrop\r\nimport CircularProgress from '@material-ui/core/CircularProgress';  //backdrop\r\nimport { makeStyles } from '@material-ui/core/styles';              //backdrop\r\nimport { Firebase } from '../../config';\r\n\r\n\r\n// style backdrop\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n// /style backdrop\r\n\r\n\r\n// <snackbar function>\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n// </snackbar function>\r\n\r\n\r\nconst PengaturanAkun = () => {\r\n\r\n    // <snackbar function>\r\n    const [open, setOpen] = React.useState(false);\r\n    const [message, setMessage] = useState(\"\")\r\n    const [messageType, setMessageType] = useState(\"\")\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        // history.push(\"/masuk\");\r\n    };\r\n    // </snackbar function>\r\n\r\n    const classes = useStyles();                                //backdrop\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const textInput = useRef();\r\n    const [userData, setUserData] = useState({});\r\n    const [photo, setPhoto] = useState(\"\");\r\n    const [urlPhoto, setUrlPhoto] = useState(\"\");\r\n    const [openBackdrop, setOpenBackdrop] = useState(false);    //backdrop\r\n\r\n\r\n    useEffect(() => {\r\n        setPhoto(null);\r\n\r\n        // get user data\r\n        Firebase.database()\r\n            .ref(`users/${params.key}/`)\r\n            .once(\"value\")\r\n            .then(res => {\r\n                setUserData(res.val())\r\n            })\r\n    }, [setOpen])\r\n\r\n\r\n    // execute when photo state change\r\n    useEffect(() => {\r\n        if (photo) {\r\n            postImage();\r\n        }\r\n\r\n        document.title = `Kossep | Pengaturan akun`\r\n    }, [photo]);\r\n\r\n\r\n    // upload to cloudinary\r\n    const postImage = async () => {\r\n        setOpenBackdrop(true);\r\n        const data = new FormData();\r\n        data.append(\"file\", photo);\r\n        data.append(\"upload_preset\", \"kossep\");\r\n        data.append(\"cloud_name\", \"harleykwen\");\r\n        await fetch(\"https://api.cloudinary.com/v1_1/harleykwen/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log({ successUpload: data });\r\n            setUrlPhoto(data.url);\r\n\r\n            // save to firebase\r\n            Firebase.database()\r\n                .ref(`users/${params.key}/photo/`)\r\n                .remove();\r\n            Firebase.database()\r\n                .ref(`users/${params.key}/photo/`)\r\n                .set(data.url);\r\n            userData.photo = data.url\r\n            setOpenBackdrop(false);\r\n            setMessage(\"Berhasil upload foto\");\r\n            setMessageType(\"success\")\r\n            setOpen(true);\r\n        })\r\n        .catch(err => {\r\n            setOpenBackdrop(false);\r\n            setMessage(\"Gagal upload foto\");\r\n            setMessageType(\"error\")\r\n            setOpen(true);\r\n        });\r\n    };\r\n\r\n\r\n    // when button non aktif clicked\r\n    const onNonAktif = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"pengaturanakun-container\">\r\n            <div className=\"pengaturanakun-img-container\">\r\n                <div className=\"pengaturanakun-img\">\r\n                    {/* check is photo available */}\r\n                    {userData.photo ? (\r\n                        <img src={userData.photo} altd=\"\" />\r\n                    ) : (\r\n                        <i className='bx bxs-user'></i>\r\n                    )}\r\n                </div>\r\n                <input \r\n                    type=\"file\" \r\n                    accept=\"image/*\" \r\n                    style={{display: \"none\"}} \r\n                    ref={textInput}\r\n                    onChange={(e) => {\r\n                        const file = e.target.files[0];\r\n                        if (file && file.type.substr(0, 5) === \"image\") {\r\n                            setPhoto(file);\r\n                        } else {\r\n                            alert(\"gagal unggah foto\")\r\n                        }\r\n                    }}\r\n                />\r\n                {/* check is photo available */}\r\n                {userData.photo ? (<p onClick={() => textInput.current.click()}>Ganti foto</p>) : (<p onClick={() => textInput.current.click()}>Unggah Foto</p>)}\r\n            </div>\r\n            <div className=\"pengaturanakun-bio-container\">\r\n                <p>Bio</p>\r\n                <p className=\"pengaturanakun-link\" onClick={onNonAktif}>Ubah</p>\r\n            </div>\r\n            <div className=\"pengaturanakun-nama-container\">\r\n                <p>{userData ? userData.namaLengkap : \"Nama\"}</p>\r\n                <p className=\"pengaturanakun-link\" onClick={onNonAktif}>Ubah</p>\r\n            </div>\r\n            <div className=\"pengaturanakun-email-container\">\r\n                <p>{userData ? userData.alamatEmail : \"Email\"}</p>\r\n                <p className=\"pengaturanakun-link\" onClick={onNonAktif}>Ubah</p>\r\n            </div>\r\n            <div className=\"pengaturanakun-katasandi-container\">\r\n                <p>Kata sandi</p>\r\n                <p className=\"pengaturanakun-link\" onClick={onNonAktif}>Ubah</p>\r\n            </div>\r\n            <Button className=\"pengaturanakun-button\" variant=\"danger\" onClick={onNonAktif}>Nonaktifkan akun</Button>\r\n            \r\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={messageType}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <Backdrop className={classes.backdrop} open={openBackdrop}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PengaturanAkun\r\n","D:\\Project\\react-kossep\\src\\pages\\HalamanAkun\\index.js",["146"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Firebase } from '../../config';\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { RecipeCard } from '../../components';\r\n\r\nconst HalamanAkun = () => {\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const [userData, setUserData] = useState({});\r\n    const [posts, setPosts] = useState([]);\r\n    const [following, setFollowing] = useState([]);\r\n    const [followers, setFollowers] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        // get user data\r\n        Firebase.database()\r\n            .ref(`users/${params.key}/`)\r\n            .once(\"value\")\r\n            .then(res => {\r\n                if (res.val()){\r\n                    const data = res.val();\r\n                    setUserData(data);\r\n                }\r\n            })\r\n        \r\n        // get recipes data\r\n        Firebase.database()\r\n            .ref(`posts/`)\r\n            .orderByChild(\"chef/uid\")\r\n            .equalTo(params.key)\r\n            .once(\"value\", orderDataPost)\r\n\r\n        // get following data\r\n        Firebase.database()\r\n            .ref(`users/${params.key}/following/`)\r\n            .once(\"value\", orderDataFollowing)\r\n\r\n        // get followers data\r\n        Firebase.database()\r\n            .ref(`users/${params.key}/followers/`)\r\n            .once(\"value\", orderDataFollowers)\r\n\r\n        document.title = `Kossep | Profil`\r\n\r\n    }, [])\r\n\r\n\r\n    // order data posts from firebase and save to state posts\r\n    const orderDataPost = (items) => {\r\n        const data=[]\r\n\r\n        items.forEach((item) => {\r\n            const oldData = item.val();\r\n            data.unshift(oldData);\r\n        });\r\n\r\n        console.log({dataPosts: data})\r\n        setPosts(data);\r\n    }\r\n\r\n\r\n    // order data following from firebase and save to state following\r\n    const orderDataFollowing = (items) => {\r\n        const data=[]\r\n\r\n        items.forEach((item) => {\r\n            const oldData = item.val();\r\n            const newData = oldData.uid;\r\n            data.unshift(newData);\r\n        });\r\n\r\n        console.log({dataFollowing: data})\r\n        setFollowing(data);\r\n    }\r\n\r\n\r\n    // order data followers from firebase and save to state following\r\n    const orderDataFollowers = (items) => {\r\n        const data=[]\r\n\r\n        items.forEach((item) => {\r\n            const oldData = item.val();\r\n            const newData = oldData.uid;\r\n            data.unshift(newData);\r\n        });\r\n\r\n        console.log({dataFollowers: data})\r\n        setFollowers(data);\r\n    }\r\n\r\n\r\n    // view profile\r\n    const lihatResep = (key) => {\r\n        history.push(`/lihatresep/${key}`);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"halamanakun-container\">\r\n            <div className=\"halamanakun-userinfo\">\r\n                <div className=\"halamanakun-userinfo-name\">\r\n                    <div className=\"halamanakun-userinfo-name-img\">\r\n                        {userData.photo ? (<img src={userData.photo} alt=\"\"/>) : (<i className='bx bxs-user'></i>)}\r\n                    </div>\r\n                    <p>{userData.namaLengkap}</p>\r\n                    <Button variant=\"info\" onClick={() => history.push(`/pengaturanakun/${userData.uid}`)}>Edit profile</Button>\r\n                </div>\r\n                <div className=\"halamanakun-userinfo-popularity\">\r\n                    <p>{posts.length} <br></br> posts</p>\r\n                    <div></div>\r\n                    <p>{followers.length} <br></br> followers</p>\r\n                    <div></div>\r\n                    <p>{following.length} <br></br> following</p>\r\n                </div>\r\n            </div>\r\n            <hr></hr>\r\n            \r\n            {/* when posts available */}\r\n            {posts && (\r\n            <div className=\"halamanakun-grid\">\r\n\r\n                {/* mapping posts */}\r\n                {posts.map(recipe => (\r\n                <RecipeCard recipe={recipe} lihatResep={lihatResep} type=\"profile\" />\r\n                ))}\r\n\r\n            </div>\r\n            )}\r\n\r\n            {/* when zero posts */}\r\n            {posts.length === 0 && (\r\n            <div className=\"zero-posts\">\r\n                <i class='bx bx-book-open'></i>\r\n                <p>Tidak ada resep</p>\r\n            </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HalamanAkun\r\n","D:\\Project\\react-kossep\\src\\pages\\HalamanUtama\\index.js",[],"D:\\Project\\react-kossep\\src\\pages\\Recook\\index.js",["147","148","149","150","151"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Firebase } from \"../../config\";\r\nimport firebase from 'firebase';\r\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n// backdrop\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\n// snackbar\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst Recook = () => {\r\n    // backdrop\r\n    const classes = useStyles();\r\n    const [openBackdrop, setOpenBackdrop] = useState(false);\r\n\r\n    // snackbar\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const [messageType, setMessageType] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenSnackbar(false);\r\n        if(messageType===\"success\"){\r\n            history.push(`/halamanutama/${resep.chef.uid}`);\r\n        }\r\n    };\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const { dataUser, loginStatus } = useSelector(state => state);\r\n    const uploadPhoto = useRef();\r\n    const [currentRecipe, setCurrentRecipe] = useState();\r\n    const [judul, setJudul] = useState(\"\");\r\n    const [cerita, setCerita] = useState(\"\");\r\n    const [waktu, setWaktu] = useState(\"\");\r\n    const [bahan, setBahan] = useState([{ item: \"\" }]);\r\n    const [langkah, setLangkah] = useState([{ item: \"\" }]);\r\n    const [biaya, setBiaya] = useState(\"\")\r\n    const [urlPhoto, setUrlPhoto] = useState(\"\");\r\n    const [recookFrom, setRecookFrom] = useState(\"\");\r\n    const [photo, setPhoto] = useState(\"\");\r\n    const resep = {\r\n        postId: uuidv4(),\r\n        judul,\r\n        cerita,\r\n        waktu,\r\n        bahan,\r\n        langkah,\r\n        biaya,\r\n        urlPhoto,\r\n        chef: dataUser,\r\n        waktuPost: '',\r\n        timestamp: '',\r\n        recookFrom: currentRecipe,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if ( !loginStatus ) history.replace('/eksplor');\r\n\r\n        // get recipe data for recok\r\n        Firebase.database()\r\n            .ref(`posts/${params.key}/`)\r\n            .once(\"value\")\r\n            .then(res => {\r\n                if(res.val()){\r\n                    const oldData = res.val();\r\n                    setCurrentRecipe(oldData);\r\n\r\n                    setJudul(oldData.judul);\r\n                    setCerita(oldData.cerita);\r\n                    setWaktu(oldData.waktu);\r\n                    setRecookFrom(oldData.postId);\r\n                    setBiaya(oldData.biaya);\r\n                    setUrlPhoto(oldData.urlPhoto);\r\n\r\n                    const newDataBahan = [];\r\n                    oldData.bahan.map(item => {\r\n                        newDataBahan.push(item);\r\n                    });\r\n                    setBahan(newDataBahan);\r\n\r\n                    const newDataLangkah = [];\r\n                    oldData.langkah.map(item => {\r\n                        newDataLangkah.push(item);\r\n                    });\r\n                    setLangkah(newDataLangkah);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                alert(\"resep tidak ditemukan\");\r\n            });\r\n\r\n        document.title = `Kossep | Recook`\r\n    }, []);\r\n\r\n\r\n    // execute when photo state change\r\n    useEffect(() => {\r\n        if(photo){\r\n            postImage();\r\n        }\r\n    }, [photo])\r\n\r\n\r\n    // function form bahan\r\n    const handleBahanChangeInput = (index, event) => {\r\n        const values = [...bahan];\r\n        values[index][event.target.name] = event.target.value;\r\n        setBahan(values);\r\n    };\r\n    const handleBahanAddInput = () => {\r\n        setBahan([...bahan, {item: ''}])\r\n    };\r\n    const handleBahanRemoveInput = (index) => {\r\n        const values = [...bahan];\r\n        values.splice(index, 1);\r\n        setBahan(values);\r\n    };\r\n\r\n\r\n    // function form langkah\r\n    const handleLangkahChangeInput = (index, event) => {\r\n        const values = [...langkah];\r\n        values[index][event.target.name] = event.target.value;\r\n        setLangkah(values);\r\n    };\r\n    const handleLangkahAddInput = () => {\r\n        setLangkah([...langkah, {item: ''}])\r\n    };\r\n    const handleLangkahRemoveInput = (index) => {\r\n        const values = [...langkah];\r\n        values.splice(index, 1);\r\n        setLangkah(values);\r\n    };\r\n\r\n\r\n    // upload to cloudinary\r\n    const postImage = async () => {\r\n        setOpenBackdrop(true)\r\n        const data = new FormData();\r\n        data.append(\"file\", photo);\r\n        data.append(\"upload_preset\", \"kossep\");\r\n        data.append(\"cloud_name\", \"harleykwen\");\r\n        await fetch(\"https://api.cloudinary.com/v1_1/harleykwen/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log({ successUpload: data });\r\n            setUrlPhoto(data.url);\r\n            setOpenBackdrop(false);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setOpenBackdrop(false);\r\n        });\r\n    };\r\n\r\n    // buat resep\r\n    const onRecook = () => {\r\n        const today = new Date();\r\n        const date = today.getDate() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getFullYear();\r\n        resep.waktuPost = date;\r\n        resep.timestamp = firebase.database.ServerValue.TIMESTAMP;\r\n\r\n        Firebase.database()\r\n            .ref(`posts/${resep.postId}/`)\r\n            .set(resep);\r\n\r\n        Firebase.database()\r\n            .ref(`posts/${currentRecipe.postId}/recookBy/`)\r\n            .push(resep.postId);\r\n\r\n        setMessage(\"Recook berhasil\");\r\n        setMessageType(\"success\");\r\n        setOpenSnackbar(true);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"recook-container\">\r\n            <Form className=\"recook-form\">\r\n                {/* when recipe available */}\r\n                {currentRecipe&&(\r\n                    <Button \r\n                        className=\"recook-buttonInfo\" \r\n                        variant=\"warning\"\r\n                        onClick={() => history.push(`/lihatresep/${params.key}`)}\r\n                        >\r\n                        Recook \"{currentRecipe.judul}\" by {currentRecipe.chef.namaLengkap}\r\n                    </Button>\r\n                )}\r\n                <Form.Group>\r\n                    <Form.Label>Judul</Form.Label>\r\n                    <Form.Control\r\n                        className=\"recook-form-judul\"\r\n                        type=\"text\"\r\n                        placeholder=\"judul\"\r\n                        value={judul}\r\n                        onChange={(e) => setJudul(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n        \r\n                <Form.Group>\r\n                    <Form.Label>Cerita</Form.Label>\r\n                    <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"cerita dibalik resep ini\"\r\n                    value={cerita}\r\n                    onChange={(e) => setCerita(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n        \r\n                <Form.Group>\r\n                    <Form.Label>Lama memasak</Form.Label>\r\n                    <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"lama masak\"\r\n                    value={waktu}\r\n                    onChange={(e) => setWaktu(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n        \r\n                <Form.Group className=\"recook-bahan-wrapper\">\r\n                    <Form.Label>Bahan-bahan</Form.Label>\r\n                    {bahan.map((bahan, index) => (\r\n                    <InputGroup className=\"mb-3\" key={index}>\r\n                        <p>{index+1}.</p>\r\n                        <FormControl\r\n                            className=\"recook-bahan-formcontrol\"\r\n                            placeholder=\"nama bahan\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            name=\"item\"\r\n                            type=\"text\"\r\n                            value={bahan.item}\r\n                            onChange={(event) => handleBahanChangeInput(index, event)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                        <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={() => handleBahanRemoveInput(index)}\r\n                        >\r\n                            hapus\r\n                        </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                    ))}\r\n                    <Button variant=\"warning\" onClick={handleBahanAddInput}>\r\n                    tambah\r\n                    </Button>\r\n                </Form.Group>\r\n        \r\n                <Form.Group className=\"recook-langkah-wrapper\">\r\n                    <Form.Label>Langkah-langkah</Form.Label>\r\n                    {langkah.map((langkah, index) => (\r\n                    <InputGroup className=\"mb-3\" key={index}>\r\n                        <p>{index+1}.</p>\r\n                        <FormControl\r\n                            className=\"recook-langkah-formcontrol\"\r\n                            placeholder=\"nama langkah\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            name=\"item\"\r\n                            type=\"text\"\r\n                            value={langkah.item}\r\n                            onChange={(event) => handleLangkahChangeInput(index, event)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                        <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={() => handleLangkahRemoveInput(index)}\r\n                        >\r\n                            hapus\r\n                        </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                    ))}\r\n                    <Button variant=\"warning\" onClick={handleLangkahAddInput}>\r\n                        tambah\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Biaya</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>Rp.</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl \r\n                            aria-label=\"Amount (to the nearest dollar)\"\r\n                            value={biaya}\r\n                            onChange={(e) => setBiaya(e.target.value)}\r\n                            maxLength={2} \r\n                        />\r\n                        <InputGroup.Append>\r\n                        <InputGroup.Text>K/porsi</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n        \r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        style={{display: 'none'}}\r\n                        ref={uploadPhoto}\r\n                        aria-describedby=\"basic-addon1\"\r\n                        type=\"file\"\r\n                        accept='image/*'\r\n                        onChange={(e) => setPhoto(e.target.files[0])}\r\n                    />\r\n                </InputGroup>\r\n\r\n                <div className='recook-form-photo'>\r\n                        {urlPhoto === '' ? (\r\n                            <p onClick={() => uploadPhoto.current.click()}>unggah foto</p>\r\n                        ) : (\r\n                            <>\r\n                                <img src={urlPhoto} alt='' />\r\n                                <p \r\n                                    className='ubah-foto'\r\n                                    onClick={() => uploadPhoto.current.click()}\r\n                                >\r\n                                    ubah foto\r\n                                </p>\r\n                            </>\r\n                        )}\r\n                </div>\r\n        \r\n                <Button\r\n                    style={{width: '100%'}}\r\n                    variant=\"warning\"\r\n                    className=\"ml-auto mr-auto\"\r\n                    onClick={onRecook}\r\n                >\r\n                    Recook\r\n                </Button>\r\n\r\n                {/* backdrop */}\r\n                <Backdrop className={classes.backdrop} open={openBackdrop}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n\r\n                {/* snackbat */}\r\n                <Snackbar open={openSnackbar} autoHideDuration={3000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity={messageType}>\r\n                        {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recook","D:\\Project\\react-kossep\\src\\pages\\HalamanAkunLain\\index.js",["152"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Firebase } from '../../config';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { RecipeCard } from '../../components';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// <snackbar function>\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n// </snackbar function>\r\n\r\nconst HalamanAkunLain = () => {\r\n\tconst params = useParams();\r\n    const history = useHistory();\r\n    const { loginStatus, dataUser } = useSelector(state => state);\r\n\r\n\tconst [userData, setUserData] = useState({});\r\n    const [posts, setPosts] = useState([]);\r\n    const [followers, setFollowers] = useState([]);\r\n    const [following, setFollowing] = useState([]);\r\n    const [followStatus, setFollowStatus] = useState();\r\n\r\n\r\n    // <snackbar function>\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMessage] = useState(\"\")\r\n    const [messageType, setMessageType] = useState(\"\")\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n        return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    // </snackbar function>\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n        // get other user data\r\n\t\tFirebase.database()\r\n\t\t\t.ref(`users/${params.key}/`)\r\n\t\t\t.once('value')\r\n\t\t\t.then(res => {\r\n\r\n\t\t\t\tif(res.val){\r\n\t\t\t\t\tconst data = res.val();\r\n                    setUserData(data);\r\n                    console.log({otherUserData: data})\r\n                }\r\n                \r\n\t\t\t})\r\n\r\n        // get other user's posts data\r\n        Firebase.database()\r\n            .ref(`posts/`)\r\n            .orderByChild(\"chef/uid\")\r\n            .equalTo(params.key)\r\n            .once(\"value\", orderDataPosts)\r\n\r\n        // get other user's following data\r\n        Firebase.database()\r\n            .ref(`users/${params.key}/following/`)\r\n            .once(\"value\", orderDataFollowing)\r\n\r\n        // get other user's followers data\r\n        Firebase.database()\r\n            .ref(`users/${params.key}/followers/`)\r\n            .once(\"value\", orderDataFollowers)\r\n\r\n        document.title = `Kossep | Profil`\r\n\r\n    }, [])\r\n    \r\n\r\n    // order other user's posts data and save to posts state\r\n\tconst orderDataPosts = (items) => {\r\n        const data=[]\r\n\r\n        items.forEach((item) => {\r\n            const oldData = item.val();\r\n            data.unshift(oldData);\r\n        });\r\n\r\n        console.log({otherUserDataPosts: data})\r\n        setPosts(data);\r\n    }\r\n\r\n\r\n    // order other user's following data and save to folowing state\r\n    const orderDataFollowing = (items) => {\r\n        const data=[]\r\n\r\n        items.forEach((item) => {\r\n            const oldData = item.val();\r\n            const newData = oldData.uid;\r\n            data.unshift(newData);\r\n        });\r\n\r\n        console.log({otherUserDataFollowers: data})\r\n        setFollowing(data);\r\n    }\r\n\r\n    \r\n    // order other user's followers data and save to followers state\r\n    const orderDataFollowers = (items) => {\r\n            const data=[]\r\n\r\n            items.forEach((item) => {\r\n                const oldData = item.val();\r\n                const newData = oldData.uid;\r\n                data.unshift(newData);\r\n            });\r\n\r\n            console.log({otherUserDataFollowers: data})\r\n            setFollowers(data);\r\n            \r\n            if ( loginStatus ){\r\n                if(data.includes(dataUser.uid)){\r\n                    setFollowStatus(true);\r\n                } else {\r\n                    setFollowStatus(false);\r\n                } \r\n            } else {\r\n                setFollowStatus(false);\r\n            }\r\n    }\r\n    \r\n    \r\n    // function when recipe clicked\r\n\tconst lihatResep = (key) => {\r\n        history.push(`/lihatresep/${key}`);\r\n    }\r\n    \r\n    \r\n    // function when follow / unfollow button clicked\r\n\tconst onFollow = (userId) => {\r\n        if( loginStatus ){\r\n            if(followers.includes(dataUser.uid)){\r\n\r\n                // remove my uid on other user followers document\r\n                Firebase.database()\r\n                .ref(`users/${userData.uid}/followers/${dataUser.uid}/`)\r\n                .remove();\r\n    \r\n                // remove other user uid on my following document\r\n                Firebase.database()\r\n                .ref(`users/${dataUser.uid}/following/${userData.uid}/`)\r\n                .remove();\r\n    \r\n                // define my uid position on followers state\r\n                const position = followers.indexOf(dataUser.uid)\r\n    \r\n                // remove my uid on followers state base on position const\r\n                followers.splice(position, 1)\r\n    \r\n                // set followStatus state to false\r\n                setFollowStatus(!followStatus);\r\n    \r\n            } else {\r\n                const myImportantData = {\r\n                    namaLengkap: dataUser.namaLengkap,\r\n                    email: dataUser.alamatEmail,\r\n                    uid: dataUser.uid\r\n                }\r\n    \r\n                const userImportantData = {\r\n                    namaLengkap: userData.namaLengkap,\r\n                    email: userData.alamatEmail,\r\n                    uid: userData.uid\r\n                }\r\n    \r\n                // add my uid to other user followers document\r\n                Firebase.database()\r\n                .ref(`users/${userData.uid}/followers/${dataUser.uid}/`)\r\n                .set(myImportantData)\r\n    \r\n                // add other user uid to my following document\r\n                Firebase.database()\r\n                .ref(`users/${dataUser.uid}/following/${userData.uid}`)\r\n                .set(userImportantData);\r\n    \r\n                // add my uid to followers state\r\n                followers.push(dataUser.uid)\r\n    \r\n                // set followStatus state to true\r\n                setFollowStatus(!followStatus)\r\n            }\r\n        } else {\r\n            setMessage(\"Kamu harus masuk terlebih dahulu\");\r\n            setMessageType(\"error\");\r\n            setOpen(true)\r\n        }\r\n    }\r\n    \r\n\r\n\treturn(\r\n\t\t<div className='halamanakunlain-container'>\r\n\t\t\t<div className=\"halamanakunlain-userinfo\">\r\n                <div className=\"halamanakunlain-userinfo-name\">\r\n                    <div className=\"halamanakunlain-userinfo-name-img\">\r\n                        {userData.photo ? (<img src={userData.photo} alt=\"\"/>) : (<i className='bx bxs-user'></i>)}\r\n                    </div>\r\n                    <p>{userData.namaLengkap}</p>\r\n\t\t\t\t\t<Button \r\n\t\t\t\t\t\tclassName=\"ml-auto mr-auto\" \r\n\t\t\t\t\t\tvariant={followStatus?\"light\":\"light\"}\r\n\t\t\t\t\t\tonClick={() => onFollow(userData.uid)}\r\n\t\t\t\t\t>{followStatus?\"Berhenti mengikuti\":\"Ikuti\"}</Button>\r\n                </div>\r\n                <div className=\"halamanakunlain-userinfo-popularity\">\r\n                    <p>{posts.length} <br></br> recipes</p>\r\n                    <div></div>\r\n                    <p>{followers.length} <br></br> followers</p>\r\n                    <div></div>\r\n                    <p>{following.length} <br></br> following</p>\r\n                </div>\r\n            </div>\r\n\t\t\t<hr></hr>\r\n\r\n            {/* when posts available */}\r\n\t\t\t{posts && (\r\n            <div className=\"halamanakunlain-grid\">\r\n                \r\n                {/* mapping posts */}\r\n                {posts.map(recipe => (\r\n                <RecipeCard recipe={recipe} lihatResep={lihatResep} type='profile' />\r\n                ))}\r\n\r\n            </div>\r\n            )}\r\n\r\n            {/* when zero posts */}\r\n            {posts.length === 0 && (\r\n            <div className=\"zero-posts\">\r\n                <i class='bx bx-book-open'></i>\r\n                <p>Tidak ada resep</p>\r\n            </div>\r\n            )}\r\n\r\n            {/* snackbar */}\r\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={messageType}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n            {/* /snackbar */}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default HalamanAkunLain;","D:\\Project\\react-kossep\\src\\pages\\HalamanEksplor\\index.js",[],"D:\\Project\\react-kossep\\src\\assets\\illustrations\\index.js",[],"D:\\Project\\react-kossep\\src\\config\\redux\\store.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":14,"column":8,"nodeType":"159","endLine":14,"endColumn":10,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":27,"column":21,"nodeType":"163","endLine":27,"endColumn":41},{"ruleId":"157","severity":1,"message":"164","line":87,"column":8,"nodeType":"159","endLine":87,"endColumn":15,"suggestions":"165"},{"ruleId":"161","severity":1,"message":"162","line":109,"column":17,"nodeType":"163","endLine":109,"endColumn":39},{"ruleId":"166","severity":1,"message":"167","line":88,"column":48,"nodeType":"168","messageId":"169","endLine":88,"endColumn":50},{"ruleId":"166","severity":1,"message":"167","line":107,"column":49,"nodeType":"168","messageId":"169","endLine":107,"endColumn":51},{"ruleId":"157","severity":1,"message":"170","line":131,"column":8,"nodeType":"159","endLine":131,"endColumn":21,"suggestions":"171"},{"ruleId":"157","severity":1,"message":"172","line":42,"column":8,"nodeType":"159","endLine":42,"endColumn":10,"suggestions":"173"},{"ruleId":"161","severity":1,"message":"162","line":131,"column":21,"nodeType":"163","endLine":131,"endColumn":43},{"ruleId":"161","severity":1,"message":"162","line":21,"column":25,"nodeType":"163","endLine":21,"endColumn":48},{"ruleId":"174","severity":1,"message":"175","line":26,"column":28,"nodeType":"176","endLine":26,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":27,"column":28,"nodeType":"176","endLine":27,"endColumn":43},{"ruleId":"161","severity":1,"message":"162","line":33,"column":25,"nodeType":"163","endLine":33,"endColumn":46},{"ruleId":"161","severity":1,"message":"162","line":43,"column":25,"nodeType":"163","endLine":43,"endColumn":47},{"ruleId":"161","severity":1,"message":"162","line":53,"column":25,"nodeType":"163","endLine":53,"endColumn":46},{"ruleId":"161","severity":1,"message":"162","line":64,"column":25,"nodeType":"163","endLine":64,"endColumn":46},{"ruleId":"174","severity":1,"message":"175","line":69,"column":28,"nodeType":"176","endLine":69,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":70,"column":28,"nodeType":"176","endLine":70,"endColumn":43},{"ruleId":"177","severity":1,"message":"178","line":47,"column":11,"nodeType":"179","messageId":"180","endLine":47,"endColumn":18},{"ruleId":"177","severity":1,"message":"181","line":51,"column":12,"nodeType":"179","messageId":"180","endLine":51,"endColumn":20},{"ruleId":"157","severity":1,"message":"170","line":65,"column":8,"nodeType":"159","endLine":65,"endColumn":17,"suggestions":"182"},{"ruleId":"157","severity":1,"message":"183","line":75,"column":8,"nodeType":"159","endLine":75,"endColumn":15,"suggestions":"184"},{"ruleId":"161","severity":1,"message":"162","line":128,"column":25,"nodeType":"163","endLine":128,"endColumn":61},{"ruleId":"157","severity":1,"message":"170","line":48,"column":8,"nodeType":"159","endLine":48,"endColumn":10,"suggestions":"185"},{"ruleId":"177","severity":1,"message":"186","line":63,"column":12,"nodeType":"179","messageId":"180","endLine":63,"endColumn":22},{"ruleId":"166","severity":1,"message":"167","line":101,"column":44,"nodeType":"168","messageId":"169","endLine":101,"endColumn":46},{"ruleId":"166","severity":1,"message":"167","line":107,"column":46,"nodeType":"168","messageId":"169","endLine":107,"endColumn":48},{"ruleId":"157","severity":1,"message":"187","line":118,"column":8,"nodeType":"159","endLine":118,"endColumn":10,"suggestions":"188"},{"ruleId":"157","severity":1,"message":"183","line":126,"column":8,"nodeType":"159","endLine":126,"endColumn":15,"suggestions":"189"},{"ruleId":"157","severity":1,"message":"190","line":77,"column":8,"nodeType":"159","endLine":77,"endColumn":10,"suggestions":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.","ArrayExpression",["194"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'history', 'loginStatus', and 'postImage'. Either include them or remove the dependency array.",["195"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'params.key'. Either include it or remove the dependency array.",["196"],"React Hook useEffect has missing dependencies: 'history' and 'loginStatus'. Either include them or remove the dependency array.",["197"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'urlPhoto' is assigned a value but never used.",["198"],"React Hook useEffect has a missing dependency: 'postImage'. Either include it or remove the dependency array.",["199"],["200"],"'recookFrom' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'loginStatus', and 'params.key'. Either include them or remove the dependency array.",["201"],["202"],"React Hook useEffect has missing dependencies: 'orderDataFollowers' and 'params.key'. Either include them or remove the dependency array.",["203"],"no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"214","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [checkUser]",{"range":"223","text":"224"},"Update the dependencies array to be: [history, loginStatus, photo, postImage]",{"range":"225","text":"226"},"Update the dependencies array to be: [params.key, recookParam]",{"range":"227","text":"228"},"Update the dependencies array to be: [history, loginStatus]",{"range":"229","text":"230"},"Update the dependencies array to be: [params.key, setOpen]",{"range":"231","text":"232"},"Update the dependencies array to be: [photo, postImage]",{"range":"233","text":"234"},"Update the dependencies array to be: [params.key]",{"range":"235","text":"236"},"Update the dependencies array to be: [history, loginStatus, params.key]",{"range":"237","text":"238"},{"range":"239","text":"234"},"Update the dependencies array to be: [orderDataFollowers, params.key]",{"range":"240","text":"241"},[301,303],"[checkUser]",[2572,2579],"[history, loginStatus, photo, postImage]",[4222,4235],"[params.key, recookParam]",[1357,1359],"[history, loginStatus]",[2095,2104],"[params.key, setOpen]",[2295,2302],"[photo, postImage]",[1516,1518],"[params.key]",[3816,3818],"[history, loginStatus, params.key]",[3953,3960],[2284,2286],"[orderDataFollowers, params.key]"]