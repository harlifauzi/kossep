[{"E:\\Project\\react-kossep\\src\\index.js":"1","E:\\Project\\react-kossep\\src\\reportWebVitals.js":"2","E:\\Project\\react-kossep\\src\\App.js":"3","E:\\Project\\react-kossep\\src\\config\\index.js":"4","E:\\Project\\react-kossep\\src\\pages\\index.js":"5","E:\\Project\\react-kossep\\src\\assets\\illustrations\\index.js":"6","E:\\Project\\react-kossep\\src\\config\\Firebase\\index.js":"7","E:\\Project\\react-kossep\\src\\pages\\Masuk\\index.js":"8","E:\\Project\\react-kossep\\src\\pages\\BuatAkun\\index.js":"9","E:\\Project\\react-kossep\\src\\pages\\AboutUs\\index.js":"10","E:\\Project\\react-kossep\\src\\pages\\HalamanAkun\\index.js":"11","E:\\Project\\react-kossep\\src\\pages\\HalamanAkunLain\\index.js":"12","E:\\Project\\react-kossep\\src\\pages\\HalamanUtama\\index.js":"13","E:\\Project\\react-kossep\\src\\pages\\PengaturanAkun\\index.js":"14","E:\\Project\\react-kossep\\src\\pages\\BuatResep\\index.js":"15","E:\\Project\\react-kossep\\src\\pages\\LihatResep\\index.js":"16","E:\\Project\\react-kossep\\src\\pages\\HalamanEksplor\\index.js":"17","E:\\Project\\react-kossep\\src\\pages\\Recook\\index.js":"18","E:\\Project\\react-kossep\\src\\assets\\index.js":"19","E:\\Project\\react-kossep\\src\\config\\Routes\\index.js":"20","E:\\Project\\react-kossep\\src\\components\\index.js":"21","E:\\Project\\react-kossep\\src\\components\\molecules\\index.js":"22","E:\\Project\\react-kossep\\src\\components\\molecules\\myNavbar\\index.js":"23","E:\\Project\\react-kossep\\src\\components\\molecules\\RecipeCard\\index.js":"24","E:\\Project\\react-kossep\\src\\components\\molecules\\MyNavbar\\index.js":"25","E:\\Project\\react-kossep\\src\\components\\molecules\\SearchBar\\index.js":"26"},{"size":592,"mtime":1609053163610,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1606644614303,"results":"29","hashOfConfig":"28"},{"size":2040,"mtime":1613398393382,"results":"30","hashOfConfig":"28"},{"size":108,"mtime":1613397009353,"results":"31","hashOfConfig":"28"},{"size":643,"mtime":1610696652801,"results":"32","hashOfConfig":"28"},{"size":599,"mtime":1610866526076,"results":"33","hashOfConfig":"28"},{"size":556,"mtime":1609339608557,"results":"34","hashOfConfig":"28"},{"size":4289,"mtime":1611026563251,"results":"35","hashOfConfig":"28"},{"size":5414,"mtime":1611026405525,"results":"36","hashOfConfig":"28"},{"size":3766,"mtime":1611027551376,"results":"37","hashOfConfig":"28"},{"size":4400,"mtime":1613486086469,"results":"38","hashOfConfig":"28"},{"size":8272,"mtime":1613486393426,"results":"39","hashOfConfig":"28"},{"size":3662,"mtime":1613440788587,"results":"40","hashOfConfig":"28"},{"size":6340,"mtime":1611026848938,"results":"41","hashOfConfig":"28"},{"size":12164,"mtime":1611324744766,"results":"42","hashOfConfig":"28"},{"size":14900,"mtime":1611330727854,"results":"43","hashOfConfig":"28"},{"size":3083,"mtime":1613485401695,"results":"44","hashOfConfig":"28"},{"size":13373,"mtime":1611330584707,"results":"45","hashOfConfig":"28"},{"size":32,"mtime":1609503220992,"results":"46","hashOfConfig":"28"},{"size":1173,"mtime":1613397048729,"results":"47","hashOfConfig":"28"},{"size":28,"mtime":1613395459704,"results":"48","hashOfConfig":"28"},{"size":174,"mtime":1613485280801,"results":"49","hashOfConfig":"28"},{"size":2875,"mtime":1613398568264,"results":"50","hashOfConfig":"28"},{"size":2174,"mtime":1613485911423,"results":"51","hashOfConfig":"28"},{"size":2875,"mtime":1613398568264,"results":"52","hashOfConfig":"28"},{"size":845,"mtime":1613485410602,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1y7rrrf",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Project\\react-kossep\\src\\index.js",[],["118","119"],"E:\\Project\\react-kossep\\src\\reportWebVitals.js",[],"E:\\Project\\react-kossep\\src\\App.js",["120"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { Firebase, Routes } from \"./config\";\nimport { MyNavbar } from \"./components\";\n\nconst App = () => {\n    const history = useHistory();\n    const [userLoginStatus, setUserLoginStatus] = useState(false);\n    const [userLoginData, setUserLoginData] = useState({});\n    const [readyToRender, setReadyToRender] = useState();\n\n    useEffect(() => {\n        // check login user\n        Firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                Firebase.database()\n                    .ref(`users/${user.uid}/`)\n                    .once(\"value\")\n                    .then(res => {\n                        if (res.val()) {\n                            const data = res.val();\n                            localStorage.setItem(\"user\", JSON.stringify(data));\n                            localStorage.setItem(\"userLoginStatus\", JSON.stringify(true));\n                            setUserLoginData(data);\n                            setUserLoginStatus(true);\n                            setReadyToRender(true);\n                            history.push(`/halamanutama/${data.uid}`);\n                        }\n                    });\n            } else {\n                localStorage.setItem(\"userLoginStatus\", JSON.stringify(false));\n                setUserLoginStatus(false);\n                setReadyToRender(true);\n                history.push(\"/halamaneksplor/undifined\");\n            }\n        });\n    }, []);\n\n\n    const signOut = () => {\n        Firebase.auth().signOut();\n        localStorage.removeItem(\"user\");\n        setUserLoginStatus(false);\n        history.push(\"/\");\n    }\n\n\n    return (\n        <div className=\"app-container\">\n            {readyToRender && (\n            <>\n                <MyNavbar userLoginStatus={userLoginStatus} userLoginData={userLoginData} signOut={signOut}/>\n\n                <Routes />\n            </>\n            )}\n        </div>\n    );\n};\n\nexport default App;","E:\\Project\\react-kossep\\src\\config\\index.js",[],"E:\\Project\\react-kossep\\src\\pages\\index.js",[],"E:\\Project\\react-kossep\\src\\assets\\illustrations\\index.js",[],["121","122"],"E:\\Project\\react-kossep\\src\\config\\Firebase\\index.js",[],"E:\\Project\\react-kossep\\src\\pages\\Masuk\\index.js",["123","124"],"import React, { useEffect, useState } from \"react\";\r\nimport { Firebase } from \"../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ILSignIn } from '../../assets/illustrations';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n// <snackbar function>\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n// </snackbar function>\r\n\r\nconst Masuk = () => {\r\n    const history = useHistory();\r\n    const [alamatEmail, setAlamatEmail] = useState(\"\");\r\n    const [kataSandi, setKataSandi] = useState(\"\");\r\n    const [userData, setUserData] = useState(\"\")\r\n\r\n    // <snackbar function>\r\n    const [open, setOpen] = React.useState(false);\r\n    const [messageType, setMessageType] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n        if(messageType===\"success\"){\r\n            // history.push(`/halamanutama/${userData.uid}`);\r\n        }\r\n    };\r\n    // </snackbar function>\r\n\r\n\r\n    useEffect(() => {\r\n        document.title = \"Kossep | Masuk\"\r\n    })\r\n\r\n\r\n    const onMasuk = () => {\r\n        if( !alamatEmail ){\r\n            setMessageType(\"error\");\r\n            setMessage(\"Oops, isi email dulu yuk!\");\r\n            return setOpen(true);\r\n        } else if ( !kataSandi ){\r\n            setMessageType(\"error\");\r\n            setMessage(\"Oops, isi kata sandi dulu yuk!\");\r\n            return setOpen(true);\r\n        }\r\n\r\n        Firebase.auth()\r\n        .signInWithEmailAndPassword(alamatEmail, kataSandi)\r\n            .then(res => {\r\n                setUserData(res.user)\r\n                setMessageType(\"success\");\r\n                setMessage(\"Yeay, kamu berhasil masuk!\");\r\n                setOpen(true);\r\n            })\r\n            .catch(err => {\r\n                if (err.code === \"auth/user-not-found\") {\r\n                    setMessage(\"Oops, email yang kamu masukan tidak terdaftar!\");\r\n                    setMessageType(\"error\");\r\n                    setOpen(true);\r\n                } else if (err.code === \"auth/invalid-email\") {\r\n                    setMessage(\"Oops, email yang kamu masukan tidak valid!\");\r\n                    setMessageType(\"error\");\r\n                    setOpen(true);\r\n                } else if (err.code === \"auth/wrong-password\") {\r\n                    setMessage(\"Oops, kata sandi yang kamu masukkan salah!\");\r\n                    setMessageType(\"error\");\r\n                    setOpen(true);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"masuk-container\">\r\n            <div className=\"masuk-cards\">\r\n                <div className=\"masuk-cards-left\">\r\n                    <h3>\r\n                        Makan apa ya hari ini? <br></br> Kuy liat resep terbaru!\r\n                    </h3>\r\n                <div style={{ width: \"100%\" }}>\r\n                    <div className=\"masuk-cards-left-form\">\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"alamat email\"\r\n                            value={alamatEmail}\r\n                            onChange={(e) => setAlamatEmail(e.target.value)}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"kata sandi\"\r\n                            value={kataSandi}\r\n                            onChange={(e) => setKataSandi(e.target.value)}\r\n                        />\r\n                        <button onClick={onMasuk}> Masuk </button>\r\n                    </div>\r\n                </div>\r\n                <p className=\"masuk-cards-left-link\">Belum punya akun? <span onClick={() => history.push(\"/buatakun\")}>Klik disini</span></p>\r\n            </div>\r\n            <div className=\"masuk-cards-right\">\r\n                <img src={ILSignIn} />\r\n            </div>\r\n        </div>\r\n\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={messageType}>\r\n                {message}\r\n            </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Masuk;\r\n","E:\\Project\\react-kossep\\src\\pages\\BuatAkun\\index.js",["125"],"import React, { useEffect, useState } from \"react\";\r\nimport { Firebase } from \"../../config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ILSignUp } from \"../../assets/illustrations\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n// <snackbar function>\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n// </snackbar function>\r\n\r\nconst BuatAkun = () => {\r\n    const [namaLengkap, setNamaLengap] = useState(\"\");\r\n    const [alamatEmail, setAlamatEmail] = useState(\"\");\r\n    const [kataSandi, setKataSandi] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    // <snackbar function>\r\n    const [open, setOpen] = React.useState(false);\r\n    const [messageType, setMessageType] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        if(messageType===\"success\"){\r\n            history.push(\"/\");\r\n        }\r\n    };\r\n    // </snackbar function>\r\n\r\n\r\n    useEffect(() => {\r\n        document.title=\"Kossep | Buat akun\";\r\n    }, [])\r\n\r\n\r\n    const onBuatAkun = () => {\r\n        if( !namaLengkap ){\r\n            setMessageType(\"error\");\r\n            setMessage(\"Oops, isi dulu nama yuk!\");\r\n            return setOpen(true);\r\n        } else if ( !alamatEmail ){\r\n            setMessageType(\"error\");\r\n            setMessage(\"Oops, isi dulu kata email yuk!\");\r\n            return setOpen(true);\r\n        } else if ( !kataSandi ){\r\n            setMessageType(\"error\");\r\n            setMessage(\"Oops, isi dulu kata sandi yuk!\");\r\n            return setOpen(true);\r\n        }\r\n        Firebase.auth()\r\n        .createUserWithEmailAndPassword(alamatEmail, kataSandi)\r\n            .then((res) => {\r\n                console.log(\"success: \", res);\r\n                const data = {\r\n                    namaLengkap,\r\n                    alamatEmail,\r\n                    uid: res.user.uid,\r\n                    posts: [],\r\n                    followers: [],\r\n                    following: []\r\n                };\r\n                console.log(data);\r\n                Firebase.database()\r\n                    .ref(\"users/\" + res.user.uid + \"/\")\r\n                    .set(data);\r\n                    setMessageType(\"success\");\r\n                    setMessage(\"Yeay, akun kamu berhasil dibuat!\");\r\n                    setOpen(true);\r\n                    history.push(\"/\");\r\n            })\r\n            .catch((err) => {\r\n                if( err.code === \"auth/invalid-email\" ){\r\n                    setMessageType(\"error\");\r\n                    setMessage(\"Oops, email yang kamu masukkan tidak valid!\")\r\n                    setOpen(true);\r\n                } else if( err.code === \"auth/email-already-in-use\" ){\r\n                    setMessageType(\"error\");\r\n                    setMessage(\"Oops, email yang kamu masukkan sudah terdaftar!\")\r\n                    setOpen(true);\r\n                } else if( err.code === \"auth/weak-password\" ){\r\n                    setMessageType(\"error\");\r\n                    setMessage(\"Oops, minimal kata sandi 6 karakter ya!\")\r\n                    setOpen(true);\r\n                }\r\n                alert(\"error: \", err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"buatakun-container\">\r\n            <div className=\"buatakun-cards\">\r\n                <div className=\"buatakun-cards-left\">\r\n                    <h3>\r\n                        Makan dikosan tetep assek bareng kossep!\r\n                    </h3>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <div className=\"buatakun-cards-left-form\">\r\n                            <input\r\n                                type=\"email\"\r\n                                placeholder=\"nama lengkap\"\r\n                                value={namaLengkap}\r\n                                onChange={(e) => setNamaLengap(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"email\"\r\n                                placeholder=\"alamat email\"\r\n                                value={alamatEmail}\r\n                                onChange={(e) => setAlamatEmail(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"kata sandi\"\r\n                                value={kataSandi}\r\n                                onChange={(e) => setKataSandi(e.target.value)}\r\n                            />\r\n                            <button onClick={onBuatAkun}> Buat akun </button>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"buatakun-cards-left-link\">Sudah punya akun? <span onClick={() => history.push(\"/masuk\")}>Klik disini</span></p>\r\n                </div>\r\n                <div className=\"buatakun-cards-right\">\r\n                    <img src={ILSignUp} />\r\n                </div>\r\n            </div>\r\n\r\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={messageType}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuatAkun;\r\n","E:\\Project\\react-kossep\\src\\pages\\AboutUs\\index.js",["126","127","128","129","130","131","132","133","134"],"import React, { useEffect } from 'react'\r\nimport { ILFarhan, ILHarley, ILKhalish, ILNadya, ILRahma } from '../../assets/illustrations'\r\n\r\nconst AboutUs = () => {\r\n    useEffect(() => {\r\n        document.title=\"Kossep | About us\"\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"aboutus-container\">\r\n            <h1>Apa sih Kossep itu?</h1>\r\n            <p className=\"aboutus-deskripsi\"><i class='bx bxs-quote-alt-left'></i>Kossep menyediakan kumpulan menu masakah cepat saji yang mudah untuk dibuat. “Jika ada cara mudah untuk bikin makanan enak, kenapa dibuat susah.”\r\n            Situs ini akan membantu kamu mengakses resep makanan yang praktis khususnya kamu yang anak kos!!\r\n            Ayo eksplorasi menu lezat favorit kamu sekarang!<i class='bx bxs-quote-alt-right'></i></p>\r\n            <h1 className=\"aboutus-ourteam\">Our Team</h1>\r\n            <div class=\"aboutus-card-grid\">\r\n\r\n                <div className=\"aboutus-card\">\r\n                    <div className=\"aboutus-img-wrapper\">\r\n                        <img src={ILKhalish} />\r\n                    </div>\r\n                    <p className=\"aboutus-nama\">muhammad khalish</p>\r\n                    <p className=\"aboutus-job\">LEADER</p>\r\n                    <div className=\"aboutus-social\">\r\n                        <a target=\"_blank\" href=\"https://www.linkedin.com/in/mochammad-khalish-mulyadi-2811b21b4\"><i class='bx bxl-linkedin-square'></i></a>\r\n                        <a target=\"_blank\" href=\"https://www.instagram.com/lizzietrix_\"><i class='bx bxl-instagram-alt' ></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"aboutus-card\">\r\n                    <div className=\"aboutus-img-wrapper\">\r\n                        <img src={ILRahma} />\r\n                    </div>\r\n                    <p className=\"aboutus-nama\">rahma azizah</p>\r\n                    <p className=\"aboutus-job\">CONCEPT CREATOR</p>\r\n                    <div className=\"aboutus-social\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"aboutus-card\">\r\n                    <div className=\"aboutus-img-wrapper\">\r\n                        <img src={ILFarhan} />\r\n                    </div>\r\n                    <p className=\"aboutus-nama\">farhan andika</p>\r\n                    <p className=\"aboutus-job\">UI-DESIGNER</p>\r\n                    <div className=\"aboutus-social\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"aboutus-card\">\r\n                    <div className=\"aboutus-img-wrapper\">\r\n                        <img src={ILNadya} />\r\n                    </div>\r\n                    <p className=\"aboutus-nama\">nadya yudho</p>\r\n                    <p className=\"aboutus-job\">UX-DESIGNER</p>\r\n                    <div className=\"aboutus-social\">\r\n                        <a target=\"_blank\" href=\">https://www.instagram.com/nadyayum/\"><i class='bx bxl-instagram-alt' ></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"aboutus-card\">\r\n                    <div className=\"aboutus-img-wrapper\">\r\n                        <img src={ILHarley}/>\r\n                    </div>\r\n                    <p className=\"aboutus-nama\">harli fauzi ramli</p>\r\n                    <p className=\"aboutus-job\">DEVELOPER</p>\r\n                    <div className=\"aboutus-social\">\r\n                        <a target=\"_blank\" href=\"https://github.com/harlifauzi\"><i class='bx bxl-github'></i></a>\r\n                        <a target=\"_blank\" href=\"https://www.linkedin.com/in/harli-fauzi-ramli-420217204/\"><i class='bx bxl-linkedin-square'></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutUs\r\n","E:\\Project\\react-kossep\\src\\pages\\HalamanAkun\\index.js",["135"],"E:\\Project\\react-kossep\\src\\pages\\HalamanAkunLain\\index.js",["136"],"E:\\Project\\react-kossep\\src\\pages\\HalamanUtama\\index.js",["137","138","139","140"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Firebase } from \"../../config\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { ILBanner } from \"../../assets/illustrations\";\r\nimport { RecipeCard } from '../../components';\r\n\r\nconst HalamanUtama = () => {\r\n    const history = useHistory();\r\n    const params = useParams();\r\n    const userLoginStatus = localStorage.getItem(\"userLoginStatus\");\r\n    const [recipes, setRecipes] = useState([]);\r\n    const [siap, setSiap] = useState(false)                    \r\n\r\n\r\n    useEffect(() => {\r\n        document.title = \"Kossep\"\r\n\r\n        if (userLoginStatus === \"false\"){\r\n            history.push(\"/halamaneksplor/undifined\")\r\n        }\r\n        \r\n        Firebase.database()\r\n            .ref(`users/${params.key}/following/`)\r\n            .once(\"value\", getFollowingUid)\r\n    }, []);\r\n\r\n\r\n    // get following uid for get recipes\r\n    const getFollowingUid = (items) => {    \r\n        items.forEach(item => {\r\n            Firebase.database()\r\n                .ref(\"posts/\")\r\n                .orderByChild(\"chef/uid\")\r\n                .equalTo(item.val().uid)\r\n                .once(\"value\")\r\n                .then(res => {\r\n                    const items = res;\r\n                    \r\n                    items.forEach(item => {\r\n                        const recipe = item.val()\r\n                        Firebase.database()\r\n                            .ref(`users/${recipe.chef.uid}`)\r\n                            .once(\"value\")\r\n                            .then(res => {\r\n                                setSiap(false)\r\n                                const chef = res.val();\r\n                                recipe.chef = chef;\r\n                                recipes.push(recipe)\r\n                                setSiap(true)\r\n                            })\r\n                    })\r\n                })\r\n        })\r\n    }\r\n\r\n\r\n    // view recipe\r\n    const lihatResep = (key) => {\r\n        history.push(`/lihatresep/${key}`);\r\n    };\r\n\r\n\r\n    // view profile\r\n    const lihatAkun = (key) => {\r\n        const getDataAkun = localStorage.getItem(\"user\");\r\n        const dataAkun = JSON.parse(getDataAkun);\r\n        if (dataAkun.uid === key) {\r\n            history.push(`/halamanakun/${key}`);\r\n        } else {\r\n            history.push(`/halamanakunlain/${key}`);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"halamanutama-container\">\r\n\r\n            {/* banner */}\r\n            <div className=\"halamanutama-banner\">\r\n                <img src={ILBanner} />\r\n            </div>\r\n            \r\n            {/* buttons */}\r\n            <div className=\"halamanutama-button\">\r\n                {/* explore button */}\r\n                <div className='halamanutama-button-explore' onClick={() => history.push(`/halamaneksplor/${params.key}`)}>\r\n                    <i className='bx bx-outline'></i><p>Explore</p>\r\n                </div>\r\n\r\n                {/* create recipe button */}\r\n                <div className='halamanutama-button-plus' onClick={() => history.push(\"/buatresep\")}>\r\n                    <i className='bx bx-plus'></i><p>Buat resep</p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* if recipes available */}\r\n            {recipes && (\r\n            <div className=\"halamanutama-grid\">\r\n\r\n                {/* mapping recipes */}\r\n                {recipes.map(recipe => (\r\n                <RecipeCard recipe={recipe} lihatResep={lihatResep} lihatAkun={lihatAkun} />\r\n                ))}\r\n\r\n            </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HalamanUtama;\r\n","E:\\Project\\react-kossep\\src\\pages\\PengaturanAkun\\index.js",["141","142","143","144","145"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Snackbar from '@material-ui/core/Snackbar';                  //snackbar\r\nimport MuiAlert from '@material-ui/lab/Alert';                      //snackbar\r\nimport Backdrop from '@material-ui/core/Backdrop';                  //backdrop\r\nimport CircularProgress from '@material-ui/core/CircularProgress';  //backdrop\r\nimport { makeStyles } from '@material-ui/core/styles';              //backdrop\r\nimport { Firebase } from '../../config';\r\n\r\n\r\n// style backdrop\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n// /style backdrop\r\n\r\n\r\n// <snackbar function>\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n// </snackbar function>\r\n\r\n\r\nconst PengaturanAkun = () => {\r\n\r\n    // <snackbar function>\r\n    const [open, setOpen] = React.useState(false);\r\n    const [message, setMessage] = useState(\"\")\r\n    const [messageType, setMessageType] = useState(\"\")\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        // history.push(\"/masuk\");\r\n    };\r\n    // </snackbar function>\r\n\r\n    const classes = useStyles();                                //backdrop\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const textInput = useRef();\r\n    const [userData, setUserData] = useState({});\r\n    const [photo, setPhoto] = useState(\"\");\r\n    const [urlPhoto, setUrlPhoto] = useState(\"\");\r\n    const [openBackdrop, setOpenBackdrop] = useState(false);    //backdrop\r\n\r\n\r\n    useEffect(() => {\r\n        setPhoto(null);\r\n\r\n        // get user data\r\n        Firebase.database()\r\n            .ref(`users/${params.key}/`)\r\n            .once(\"value\")\r\n            .then(res => {\r\n                setUserData(res.val())\r\n            })\r\n    }, [setOpen])\r\n\r\n\r\n    // execute when photo state change\r\n    useEffect(() => {\r\n        if (photo) {\r\n            postImage();\r\n        }\r\n\r\n        document.title = `Kossep | Pengaturan akun`\r\n    }, [photo]);\r\n\r\n\r\n    // upload to cloudinary\r\n    const postImage = async () => {\r\n        setOpenBackdrop(true);\r\n        const data = new FormData();\r\n        data.append(\"file\", photo);\r\n        data.append(\"upload_preset\", \"kossep\");\r\n        data.append(\"cloud_name\", \"harleykwen\");\r\n        await fetch(\"https://api.cloudinary.com/v1_1/harleykwen/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log({ successUpload: data });\r\n            setUrlPhoto(data.url);\r\n\r\n            // save to firebase\r\n            Firebase.database()\r\n                .ref(`users/${params.key}/photo/`)\r\n                .remove();\r\n            Firebase.database()\r\n                .ref(`users/${params.key}/photo/`)\r\n                .set(data.url);\r\n            userData.photo = data.url\r\n            setOpenBackdrop(false);\r\n            setMessage(\"Berhasil upload foto\");\r\n            setMessageType(\"success\")\r\n            setOpen(true);\r\n        })\r\n        .catch(err => {\r\n            setOpenBackdrop(false);\r\n            setMessage(\"Gagal upload foto\");\r\n            setMessageType(\"error\")\r\n            setOpen(true);\r\n        });\r\n    };\r\n\r\n\r\n    // when button non aktif clicked\r\n    const onNonAktif = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"pengaturanakun-container\">\r\n            <div className=\"pengaturanakun-img-container\">\r\n                <div className=\"pengaturanakun-img\">\r\n                    {/* check is photo available */}\r\n                    {userData.photo ? (\r\n                        <img src={userData.photo} altd=\"\" />\r\n                    ) : (\r\n                        <i className='bx bxs-user'></i>\r\n                    )}\r\n                </div>\r\n                <input \r\n                    type=\"file\" \r\n                    accept=\"image/*\" \r\n                    style={{display: \"none\"}} \r\n                    ref={textInput}\r\n                    onChange={(e) => {\r\n                        const file = e.target.files[0];\r\n                        if (file && file.type.substr(0, 5) === \"image\") {\r\n                            setPhoto(file);\r\n                        } else {\r\n                            alert(\"gagal unggah foto\")\r\n                        }\r\n                    }}\r\n                />\r\n                {/* check is photo available */}\r\n                {userData.photo ? (<p onClick={() => textInput.current.click()}>Ganti foto</p>) : (<p onClick={() => textInput.current.click()}>Unggah Foto</p>)}\r\n            </div>\r\n            <div className=\"pengaturanakun-bio-container\">\r\n                <p>Bio</p>\r\n                <p className=\"pengaturanakun-link\" onClick={onNonAktif}>Ubah</p>\r\n            </div>\r\n            <div className=\"pengaturanakun-nama-container\">\r\n                <p>{userData ? userData.namaLengkap : \"Nama\"}</p>\r\n                <p className=\"pengaturanakun-link\" onClick={onNonAktif}>Ubah</p>\r\n            </div>\r\n            <div className=\"pengaturanakun-email-container\">\r\n                <p>{userData ? userData.alamatEmail : \"Email\"}</p>\r\n                <p className=\"pengaturanakun-link\" onClick={onNonAktif}>Ubah</p>\r\n            </div>\r\n            <div className=\"pengaturanakun-katasandi-container\">\r\n                <p>Kata sandi</p>\r\n                <p className=\"pengaturanakun-link\" onClick={onNonAktif}>Ubah</p>\r\n            </div>\r\n            <Button className=\"pengaturanakun-button\" variant=\"danger\" onClick={onNonAktif}>Nonaktifkan akun</Button>\r\n            \r\n            <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={messageType}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <Backdrop className={classes.backdrop} open={openBackdrop}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PengaturanAkun\r\n","E:\\Project\\react-kossep\\src\\pages\\BuatResep\\index.js",["146"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Firebase } from \"../../config\";\r\nimport firebase from 'firebase';\r\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\n// snackbar\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n// backdrop\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\nconst BuatResep = () => {\r\n    // backdrop\r\n    const classes = useStyles();            \r\n    const [openBackdrop, setOpenBackdrop] = useState(false);\r\n\r\n\r\n    // snackbar\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const [messageType, setMessageType] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenSnackbar(false);\r\n        if(messageType===\"success\"){\r\n            history.push(`/halamanutama/${resep.chef.uid}`);\r\n        }\r\n    };\r\n\r\n    const uploadPhoto = useRef();\r\n    const history = useHistory();\r\n\r\n    const [judul, setJudul] = useState('');\r\n    const [cerita, setCerita] = useState('');\r\n    const [waktu, setWaktu] = useState('');\r\n    const [bahan, setBahan] = useState([{item: ''}]);\r\n    const [langkah, setLangkah] = useState([{item: ''}]);\r\n    const [biaya, setBiaya] = useState('');\r\n    const [urlPhoto, setUrlPhoto] = useState('');\r\n\r\n    const [photo, setPhoto] = useState(\"\");\r\n    const resep = {\r\n        postId: '',\r\n        judul,\r\n        cerita,\r\n        waktu,\r\n        bahan,\r\n        langkah,\r\n        biaya,\r\n        urlPhoto,\r\n        chef: JSON.parse(localStorage.getItem(\"user\")),\r\n        waktuPost: '',\r\n        timestamp: ''\r\n    };\r\n\r\n\r\n    // firing when photo state change\r\n    useEffect(() => {\r\n        document.title = \"Kossep | Buat resep\";\r\n        if (photo) {\r\n            postImage();\r\n        }\r\n    }, [photo]);\r\n\r\n\r\n    // function form bahan\r\n    const handleBahanChangeInput = (index, event) => {\r\n        const values = [...bahan];\r\n        values[index][event.target.name] = event.target.value;\r\n        setBahan(values);\r\n    };\r\n    const handleBahanAddInput = () => {\r\n        setBahan([...bahan, {item: ''}]);\r\n    };\r\n    const handleBahanRemoveInput = (index) => {\r\n        const values = [...bahan];\r\n        values.splice(index, 1);\r\n        setBahan(values);\r\n    };\r\n\r\n\r\n    // function form langkah\r\n    const handleLangkahChangeInput = (index, event) => {\r\n        const values = [...langkah];\r\n        values[index][event.target.name] = event.target.value;\r\n        setLangkah(values);\r\n    };\r\n    const handleLangkahAddInput = () => {\r\n        setLangkah([...langkah, {item: ''}]);\r\n    };\r\n    const handleLangkahRemoveInput = (index) => {\r\n        const values = [...langkah];\r\n        values.splice(index, 1);\r\n        setLangkah(values);\r\n    };\r\n\r\n\r\n    // upload to cloudinary\r\n    const postImage = async () => {\r\n        setOpenBackdrop(true);\r\n        const data = new FormData();\r\n        data.append(\"file\", photo);\r\n        data.append(\"upload_preset\", \"kossep\");\r\n        data.append(\"cloud_name\", \"harleykwen\");\r\n        await fetch(\"https://api.cloudinary.com/v1_1/harleykwen/image/upload\", {\r\n            method: \"post\",\r\n            body: data,\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log({ successUpload: data });\r\n                setUrlPhoto(data.url);\r\n                setOpenBackdrop(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setOpenBackdrop(false);\r\n            });\r\n    };\r\n\r\n\r\n    //function when button buat resep clicked\r\n    const onBuatResep = async () => {\r\n        if ( resep.judul === '' || resep.cerita === '' || resep.waktu === '' || resep.biaya === '' || resep.urlPhoto === '' ){\r\n            setMessageType('error');\r\n            setMessage('pastikan semua data sudah diisi');\r\n            setOpenSnackbar(true);\r\n        } else {\r\n            const today = new Date();\r\n            const date = today.getDate() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getFullYear();\r\n            \r\n            resep.waktuPost = date;\r\n            resep.timestamp = firebase.database.ServerValue.TIMESTAMP;\r\n            resep.postId = uuidv4();\r\n\r\n            Firebase.database()\r\n                .ref(`posts/${resep.postId}/`)\r\n                .set(resep)\r\n                .then(res => {\r\n                    setMessage(\"Resep telah dibuat\");\r\n                    setMessageType(\"success\");\r\n                    setOpenSnackbar(true);\r\n                })\r\n                .catch(err => {\r\n                    setMessage(\"Gagal buat resep\");\r\n                    setMessageType(\"error\");\r\n                    setOpenSnackbar(true);\r\n                });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"buatresep-container\">\r\n            <Form className=\"buatresep-form\">\r\n                <Form.Group>\r\n                    <Form.Label>Judul</Form.Label>\r\n                    <Form.Control\r\n                        className=\"buatresep-form-judul\"\r\n                        type=\"text\"\r\n                        placeholder=\"judul\"\r\n                        value={judul}\r\n                        onChange={(e) => setJudul(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Cerita</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"cerita dibalik resep ini\"\r\n                        value={cerita}\r\n                        onChange={(e) => setCerita(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Lama memasak</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"lama masak\"\r\n                        value={waktu}\r\n                        onChange={(e) => setWaktu(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"buatresep-bahan-wrapper\">\r\n                    <Form.Label>Bahan-bahan</Form.Label>\r\n                    {bahan.map((bahan, index) => (\r\n                        <InputGroup className=\"mb-3\" key={index}>\r\n                        <p>{index+1}.</p>\r\n                        <FormControl\r\n                            className=\"buatresep-bahan-formcontrol\"\r\n                            placeholder=\"nama bahan\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            name=\"item\"\r\n                            type=\"text\"\r\n                            value={bahan.item}\r\n                            onChange={(event) => handleBahanChangeInput(index, event)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={() => handleBahanRemoveInput(index)}\r\n                            >\r\n                            hapus\r\n                            </Button>\r\n                        </InputGroup.Append>\r\n                        </InputGroup>\r\n                    ))}\r\n                    <Button variant=\"warning\" onClick={handleBahanAddInput}>\r\n                        tambah\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"buatresep-langkah-wrapper\">\r\n                    <Form.Label>Langkah-langkah</Form.Label>\r\n                    {langkah.map((langkah, index) => (\r\n                        <InputGroup className=\"mb-3\" key={index}>\r\n                        <p>{index+1}.</p>\r\n                        <FormControl\r\n                            className=\"buatresep-langkah-formcontrol\"\r\n                            placeholder=\"nama langkah\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            name=\"item\"\r\n                            type=\"text\"\r\n                            value={langkah.item}\r\n                            onChange={(event) => handleLangkahChangeInput(index, event)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                            <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={() => handleLangkahRemoveInput(index)}\r\n                            >\r\n                            hapus\r\n                            </Button>\r\n                        </InputGroup.Append>\r\n                        </InputGroup>\r\n                    ))}\r\n                    <Button variant=\"warning\" onClick={handleLangkahAddInput}>\r\n                        tambah\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Biaya</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>Rp.</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl \r\n                        aria-label=\"Amount (to the nearest dollar)\"\r\n                        value={biaya}\r\n                        onChange={(e) => setBiaya(e.target.value)} \r\n                        maxLength={2}\r\n                        />\r\n                        <InputGroup.Append>\r\n                        <InputGroup.Text>K/porsi</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        aria-describedby=\"basic-addon1\"\r\n                        ref={uploadPhoto}\r\n                        style={{display: 'none'}}\r\n                        type=\"file\"\r\n                        accept=\"image/*\" \r\n                        onChange={(e) => setPhoto(e.target.files[0])}\r\n                    />\r\n                </InputGroup>\r\n\r\n                <div className='buatresep-form-photo'>\r\n                        {urlPhoto === '' ? (\r\n                            <p onClick={() => uploadPhoto.current.click()}>unggah foto</p>\r\n                        ) : (\r\n                            <>\r\n                                <img src={urlPhoto} alt='' />\r\n                                <p \r\n                                    className='ubah-foto'\r\n                                    onClick={() => uploadPhoto.current.click()}\r\n                                >\r\n                                    ubah foto\r\n                                </p>\r\n                            </>\r\n                        )}\r\n                </div>\r\n\r\n                <Button\r\n                    variant=\"warning\"\r\n                    className=\"ml-auto mr-auto\"\r\n                    onClick={onBuatResep}\r\n                    style={{width: '100%'}}\r\n                >\r\n                    Buat resep\r\n                </Button>\r\n            </Form>\r\n\r\n            {/* backdrop */}\r\n            <Backdrop className={classes.backdrop} open={openBackdrop}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n\r\n            {/* snackbar */}\r\n            <Snackbar open={openSnackbar} autoHideDuration={1500} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={messageType}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuatResep;","E:\\Project\\react-kossep\\src\\pages\\LihatResep\\index.js",["147","148","149"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Firebase } from \"../../config\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Form, InputGroup, FormControl, Button, Modal } from \"react-bootstrap\";\r\nimport { ILNull } from \"../../assets\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\n// snackbar\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst LihatResep = () => {\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const myData = JSON.parse(localStorage.getItem(\"user\"));\r\n    const userLoginStatus = localStorage.getItem(\"userLoginStatus\");\r\n    const [modal, setModal] = useState(false);\r\n    const [resepUid, setResepUid] = useState(\"\");\r\n    const [resep, setResep] = useState();\r\n    const [comment, setComment] = useState([]);\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const [commentReady, setCommentReady] = useState(false);\r\n    const [recookFrom, setRecookFrom] = useState(\"\");\r\n    const [recookParam, setRecookParam] = useState(\"\");\r\n    const [recookBy, setRecookBy] = useState([]);\r\n\r\n\r\n    // snackbar\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMessage] = useState(\"\")\r\n    const [messageType, setMessageType] = useState(\"\")\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n        return;\r\n        }\r\n\r\n        setOpen(false);\r\n        if (message === \"Resep telah dihapus\"){\r\n            history.goBack();\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        setResep(\"\");\r\n        setComment(\"\");\r\n        setCommentReady(false)\r\n        setNewComment(\"\");\r\n        setRecookFrom(\"\");\r\n        setRecookParam(\"\");\r\n        setRecookBy(\"\");\r\n\r\n        // get recipe data\r\n        Firebase.database()\r\n        .ref(`posts/${params.key}/`)\r\n        .once(\"value\")\r\n        .then((res) => {\r\n            if (res.val()) {\r\n            const data = res.val();\r\n            setResep(data);\r\n            setResepUid(data.chef.uid);\r\n\r\n            // get info recook from\r\n            if(data.recookFrom){\r\n                Firebase.database()\r\n                    .ref(`posts/${data.recookFrom.postId}/`)\r\n                    .once(\"value\")\r\n                    .then((res) => {\r\n                        if (res.val()) {\r\n                            setRecookFrom(res.val());\r\n                        }\r\n                    });\r\n            }\r\n            }\r\n        });\r\n\r\n        // get info recook by\r\n        Firebase.database()\r\n        .ref(`posts/${params.key}/recookBy/`)\r\n        .once(\"value\")\r\n        .then((res) => {\r\n            if (res.val()) {\r\n            const recookFrom = res.val();\r\n            const data = [];\r\n            Object.keys(recookFrom).map((item) => {\r\n                const newData = {\r\n                id: item,\r\n                data: recookFrom[item],\r\n                };\r\n                data.push(newData);\r\n            });\r\n            setRecookBy(data);\r\n            }\r\n        });\r\n\r\n        // get comments\r\n        Firebase.database()\r\n        .ref(`posts/${params.key}/komentar`)\r\n        .once(\"value\")\r\n        .then((res) => {\r\n            if (res.val()) {\r\n                const data = [];\r\n                const oldData = res.val();\r\n                Object.keys(oldData).map((item) => {\r\n\r\n                    Firebase.database()\r\n                        .ref(`users/${oldData[item].byUser.uid}/`)\r\n                        .once(\"value\")\r\n                        .then(res => {\r\n                            const newData = {\r\n                                id: item,\r\n                                data: oldData[item],\r\n                                photo: res.val().photo\r\n                            }\r\n                            setCommentReady(false)\r\n\r\n                            data.unshift(newData)\r\n                            setComment(data)\r\n                            console.log(data)\r\n\r\n                            setCommentReady(true)\r\n                        })\r\n                });\r\n            }\r\n        });\r\n\r\n        document.title = `Kossep | Resep`\r\n    }, [recookParam]);\r\n\r\n\r\n    // view source recipe\r\n    const OnRecookFrom = () => {\r\n        history.push(`/lihatresep/${recookFrom.postId}`);\r\n        setRecookParam(recookFrom.postId);\r\n    };\r\n\r\n\r\n    // function when button kirim clicked\r\n    const onKirim = () => {\r\n        if ( userLoginStatus === \"true\"){\r\n            const today = new Date();\r\n            const waktuKomen = today.getTime();\r\n            const byUser = JSON.parse(localStorage.getItem(\"user\"));\r\n            const id = uuidv4();\r\n\r\n            const data = {\r\n                waktuKomen,\r\n                komen: newComment,\r\n                byUser,\r\n            };\r\n\r\n            const dataTemporary = {\r\n                id: uuidv4(),\r\n                data: {\r\n                    waktuKomen,\r\n                    komen: newComment,\r\n                    byUser,\r\n                },\r\n                photo: byUser.photo\r\n            };\r\n\r\n            // set comment on recipe's database\r\n            console.log(data);\r\n            Firebase.database().ref(`posts/${params.key}/komentar/${id}`).set(data);\r\n\r\n            setCommentReady(false)\r\n            setComment([...comment, dataTemporary])\r\n            setNewComment(\"\");\r\n            setCommentReady(true)\r\n        } else {\r\n            setMessageType(\"error\");\r\n            setMessage(\"Kamu harus masuk terlebih dahulu\");\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n\r\n    // function when button hapus clicked\r\n    const onHapus = () => {\r\n        Firebase.database().ref(`posts/${params.key}/`).remove();\r\n        setMessage(\"Resep telah dihapus\");\r\n        setMessageType(\"error\");\r\n        setOpen(true);\r\n    };\r\n\r\n\r\n    // function view profile\r\n    const onLihatProfile = (uid) => {\r\n        if (userLoginStatus === \"true\"){\r\n            if (myData.uid !== uid) {\r\n                history.push(`/halamanakunlain/${uid}`);\r\n            } else {\r\n                history.push(`/halamanakun/${uid}`);\r\n            }\r\n        } else {\r\n            history.push(`/halamanakunlain/${uid}`)\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"lihatresep-container\">\r\n\r\n            <div className=\"lihatresep-formContainer\">\r\n                {/* when resep available */}\r\n                {resep && (\r\n                <Form className=\"lihatresep-form\">\r\n                    {recookFrom && (\r\n                    <Button\r\n                        className=\"lihatresep-recook-buttonInfo\"\r\n                        variant=\"warning\"\r\n                        onClick={OnRecookFrom}\r\n                    >\r\n                        Recook \"{recookFrom.judul}\" by {recookFrom.chef.namaLengkap}\r\n                    </Button>\r\n                    )}\r\n                    <Form.Group>\r\n                    <h1 className=\"lihatresep-form-title\">{resep.judul}</h1>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <img\r\n                            className=\"card-img-top\"\r\n                            src={resep.urlPhoto}\r\n                            alt=\"\"\r\n                        />\r\n                    </InputGroup>\r\n                    <p\r\n                        className=\"lihatresep-tanggalDibuat\"\r\n                        onClick={() => onLihatProfile(resep.chef.uid)}\r\n                    >\r\n                        Dibuat pada {resep.waktuPost} oleh{\" \"}\r\n                        <span className=\"lihatresep-chef\">\r\n                        {resep.chef.namaLengkap}\r\n                        </span>\r\n                    </p>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                    <Form.Label className=\"subtitle\">Cerita</Form.Label>\r\n                    <div className=\"subtitle-underline\">\r\n                        <p>{resep.cerita}</p>\r\n                    </div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                    <Form.Label className=\"subtitle\">Lama memasak</Form.Label>\r\n                    <div className=\"subtitle-underline\">\r\n                        <p>{resep.waktu}</p>\r\n                    </div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                    <Form.Label className=\"subtitle\">Bahan-bahan</Form.Label>\r\n                    {resep.bahan.map((bahan, index) => (\r\n                        <div className=\"subtitle-underline\" key={index}>\r\n                            <p className=\"subtitle-underline-number\">\r\n                                {index + 1}.\r\n                            </p>\r\n                            <p className=\"subtitle-underline-value\">\r\n                                {bahan.item}\r\n                            </p>\r\n                            <input type=\"checkbox\" />\r\n                        </div>\r\n                    ))}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                    <Form.Label className=\"subtitle\">Langkah-langkah</Form.Label>\r\n                    {resep.langkah.map((langkah, index) => (\r\n                        <div className=\"subtitle-underline\" key={index}>\r\n                            <p className=\"subtitle-underline-number\">\r\n                                {index + 1}.\r\n                            </p>\r\n                            <p className=\"subtitle-underline-value\">\r\n                                {langkah.item}\r\n                            </p>\r\n                            <input type=\"checkbox\" />\r\n                        </div>\r\n                    ))}\r\n                    </Form.Group>\r\n\r\n                    {/* if login status = true (get from local storage) */}\r\n                    <div className=\"lihatresep-recook-group\">\r\n                    { userLoginStatus === \"true\" && (\r\n                        <>\r\n                        {myData.uid !== resepUid && (\r\n                            <Button\r\n                            className=\"lihatresep-buttonRecook\"\r\n                            variant=\"warning\"\r\n                            onClick={() => history.push(`/recook/${resep.postId}`)}\r\n                            >\r\n                            Recook resep ini\r\n                            </Button>\r\n                        )}\r\n                        </>\r\n                    )}\r\n                    {recookBy && (\r\n                        <p className=\"lihatresep-recookBy\">\r\n                            resep ini telah di <span className=\"recookText\">recook</span>{\" \"}\r\n                            oleh{\" \"}\r\n                            <span className=\"recookOrang\">{recookBy.length} orang</span>\r\n                        </p>\r\n                    )}\r\n                    </div>\r\n\r\n                    {/* if login status = true (get from local storage) */}\r\n                    { userLoginStatus === \"true\" && (\r\n                        <>\r\n                            {myData.uid === resepUid && (\r\n                            <Button\r\n                                className=\"lihatresep-buttonRecook ml-auto mr-0 lihatresep-recook-group\"\r\n                                variant=\"danger\"\r\n                                onClick={() => setModal(true)}\r\n                            >\r\n                                Hapus resep ini\r\n                            </Button>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </Form>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"lihatresep-commentContainer\">\r\n                <div className=\"lihatresep-comment\">\r\n                    <div className=\"lihatresep-comment-judul\">\r\n                        <i className='bx bx-comment-detail'></i>\r\n                        <p className=\"subtitle judul\">Komentar</p>\r\n                    </div>\r\n                    {/* when comments available */}\r\n                    {commentReady && (\r\n                        <div className=\"lihatresep-comment-list\">\r\n                        {comment.map((comment) => (\r\n                            <div className=\"lihatresep-comment-item\" key={comment.id}>\r\n                                <div>\r\n                                    {comment.photo && (<img src={comment.photo} alt=\"\" />)}\r\n                                    {!comment.photo && (<img src={ILNull} alt=\"\" />)}\r\n                                    <p \r\n                                        className=\"subtitle\"\r\n                                        onClick={() => onLihatProfile(comment.data.byUser.uid)}\r\n                                    >{comment.data.byUser.namaLengkap}</p>\r\n                                </div>\r\n                                <p>{comment.data.komen}</p>\r\n                            </div>\r\n                        ))}\r\n                        </div>\r\n                    )}\r\n                    <InputGroup className=\"mb-3 lihatresep-comment-inputGroup\">\r\n                        <FormControl\r\n                        placeholder=\"Tulis komentar disini\"\r\n                        aria-label=\"Recipient's username\"\r\n                        aria-describedby=\"basic-addon2\"\r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                        <Button variant=\"outline-secondary\" onClick={onKirim}>\r\n                            Kirim\r\n                        </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </div>\r\n\r\n                {/* modal */}\r\n                {modal && (\r\n                <div className=\"lihatresep-modal\">\r\n                    <Modal.Dialog className=\"m-auto\">\r\n                    <Modal.Body>\r\n                        <p>Hapus resep ini?</p>\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" onClick={() => setModal(false)}>\r\n                        Kembali\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={onHapus}>\r\n                        Hapus\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                    </Modal.Dialog>\r\n                </div>\r\n                )}\r\n                {/* /modal */}\r\n\r\n                {/* snackbar */}\r\n                <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={messageType}>\r\n                    {message}\r\n                </Alert>\r\n                </Snackbar>\r\n                {/* /snackbar */}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LihatResep;\r\n","E:\\Project\\react-kossep\\src\\pages\\HalamanEksplor\\index.js",["150","151","152","153"],"E:\\Project\\react-kossep\\src\\pages\\Recook\\index.js",["154","155","156","157","158"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Firebase } from \"../../config\";\r\nimport firebase from 'firebase';\r\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\n// backdrop\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\n// snackbar\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst Recook = () => {\r\n    // backdrop\r\n    const classes = useStyles();\r\n    const [openBackdrop, setOpenBackdrop] = useState(false);\r\n\r\n    // snackbar\r\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\r\n    const [messageType, setMessageType] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenSnackbar(false);\r\n        if(messageType===\"success\"){\r\n            history.push(`/halamanutama/${resep.chef.uid}`);\r\n        }\r\n    };\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const uploadPhoto = useRef();\r\n    const [currentRecipe, setCurrentRecipe] = useState();\r\n    const [judul, setJudul] = useState(\"\");\r\n    const [cerita, setCerita] = useState(\"\");\r\n    const [waktu, setWaktu] = useState(\"\");\r\n    const [bahan, setBahan] = useState([{ item: \"\" }]);\r\n    const [langkah, setLangkah] = useState([{ item: \"\" }]);\r\n    const [biaya, setBiaya] = useState(\"\")\r\n    const [urlPhoto, setUrlPhoto] = useState(\"\");\r\n    const [recookFrom, setRecookFrom] = useState(\"\");\r\n    const [photo, setPhoto] = useState(\"\");\r\n    const resep = {\r\n        postId: uuidv4(),\r\n        judul,\r\n        cerita,\r\n        waktu,\r\n        bahan,\r\n        langkah,\r\n        biaya,\r\n        urlPhoto,\r\n        chef: JSON.parse(localStorage.getItem(\"user\")),\r\n        waktuPost: '',\r\n        timestamp: '',\r\n        recookFrom: currentRecipe,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // get recipe data for recok\r\n        Firebase.database()\r\n            .ref(`posts/${params.key}/`)\r\n            .once(\"value\")\r\n            .then(res => {\r\n                if(res.val()){\r\n                    const oldData = res.val();\r\n                    setCurrentRecipe(oldData);\r\n\r\n                    setJudul(oldData.judul);\r\n                    setCerita(oldData.cerita);\r\n                    setWaktu(oldData.waktu);\r\n                    setRecookFrom(oldData.postId);\r\n                    setBiaya(oldData.biaya);\r\n                    setUrlPhoto(oldData.urlPhoto);\r\n\r\n                    const newDataBahan = [];\r\n                    oldData.bahan.map(item => {\r\n                        newDataBahan.push(item);\r\n                    });\r\n                    setBahan(newDataBahan);\r\n\r\n                    const newDataLangkah = [];\r\n                    oldData.langkah.map(item => {\r\n                        newDataLangkah.push(item);\r\n                    });\r\n                    setLangkah(newDataLangkah);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                alert(\"resep tidak ditemukan\");\r\n            });\r\n\r\n        document.title = `Kossep | Recook`\r\n    }, []);\r\n\r\n\r\n    // execute when photo state change\r\n    useEffect(() => {\r\n        if(photo){\r\n            postImage();\r\n        }\r\n    }, [photo])\r\n\r\n\r\n    // function form bahan\r\n    const handleBahanChangeInput = (index, event) => {\r\n        const values = [...bahan];\r\n        values[index][event.target.name] = event.target.value;\r\n        setBahan(values);\r\n    };\r\n    const handleBahanAddInput = () => {\r\n        setBahan([...bahan, {item: ''}])\r\n    };\r\n    const handleBahanRemoveInput = (index) => {\r\n        const values = [...bahan];\r\n        values.splice(index, 1);\r\n        setBahan(values);\r\n    };\r\n\r\n\r\n    // function form langkah\r\n    const handleLangkahChangeInput = (index, event) => {\r\n        const values = [...langkah];\r\n        values[index][event.target.name] = event.target.value;\r\n        setLangkah(values);\r\n    };\r\n    const handleLangkahAddInput = () => {\r\n        setLangkah([...langkah, {item: ''}])\r\n    };\r\n    const handleLangkahRemoveInput = (index) => {\r\n        const values = [...langkah];\r\n        values.splice(index, 1);\r\n        setLangkah(values);\r\n    };\r\n\r\n\r\n    // upload to cloudinary\r\n    const postImage = async () => {\r\n        setOpenBackdrop(true)\r\n        const data = new FormData();\r\n        data.append(\"file\", photo);\r\n        data.append(\"upload_preset\", \"kossep\");\r\n        data.append(\"cloud_name\", \"harleykwen\");\r\n        await fetch(\"https://api.cloudinary.com/v1_1/harleykwen/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log({ successUpload: data });\r\n            setUrlPhoto(data.url);\r\n            setOpenBackdrop(false);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            setOpenBackdrop(false);\r\n        });\r\n    };\r\n\r\n    // buat resep\r\n    const onRecook = () => {\r\n        const today = new Date();\r\n        const date = today.getDate() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getFullYear();\r\n        resep.waktuPost = date;\r\n        resep.timestamp = firebase.database.ServerValue.TIMESTAMP;\r\n\r\n        Firebase.database()\r\n            .ref(`posts/${resep.postId}/`)\r\n            .set(resep);\r\n\r\n        Firebase.database()\r\n            .ref(`posts/${currentRecipe.postId}/recookBy/`)\r\n            .push(resep.postId);\r\n\r\n        setMessage(\"Recook berhasil\");\r\n        setMessageType(\"success\");\r\n        setOpenSnackbar(true);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"recook-container\">\r\n            <Form className=\"recook-form\">\r\n                {/* when recipe available */}\r\n                {currentRecipe&&(\r\n                    <Button \r\n                        className=\"recook-buttonInfo\" \r\n                        variant=\"warning\"\r\n                        onClick={() => history.push(`/lihatresep/${params.key}`)}\r\n                        >\r\n                        Recook \"{currentRecipe.judul}\" by {currentRecipe.chef.namaLengkap}\r\n                    </Button>\r\n                )}\r\n                <Form.Group>\r\n                    <Form.Label>Judul</Form.Label>\r\n                    <Form.Control\r\n                        className=\"recook-form-judul\"\r\n                        type=\"text\"\r\n                        placeholder=\"judul\"\r\n                        value={judul}\r\n                        onChange={(e) => setJudul(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n        \r\n                <Form.Group>\r\n                    <Form.Label>Cerita</Form.Label>\r\n                    <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"cerita dibalik resep ini\"\r\n                    value={cerita}\r\n                    onChange={(e) => setCerita(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n        \r\n                <Form.Group>\r\n                    <Form.Label>Lama memasak</Form.Label>\r\n                    <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"lama masak\"\r\n                    value={waktu}\r\n                    onChange={(e) => setWaktu(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n        \r\n                <Form.Group className=\"recook-bahan-wrapper\">\r\n                    <Form.Label>Bahan-bahan</Form.Label>\r\n                    {bahan.map((bahan, index) => (\r\n                    <InputGroup className=\"mb-3\" key={index}>\r\n                        <p>{index+1}.</p>\r\n                        <FormControl\r\n                            className=\"recook-bahan-formcontrol\"\r\n                            placeholder=\"nama bahan\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            name=\"item\"\r\n                            type=\"text\"\r\n                            value={bahan.item}\r\n                            onChange={(event) => handleBahanChangeInput(index, event)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                        <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={() => handleBahanRemoveInput(index)}\r\n                        >\r\n                            hapus\r\n                        </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                    ))}\r\n                    <Button variant=\"warning\" onClick={handleBahanAddInput}>\r\n                    tambah\r\n                    </Button>\r\n                </Form.Group>\r\n        \r\n                <Form.Group className=\"recook-langkah-wrapper\">\r\n                    <Form.Label>Langkah-langkah</Form.Label>\r\n                    {langkah.map((langkah, index) => (\r\n                    <InputGroup className=\"mb-3\" key={index}>\r\n                        <p>{index+1}.</p>\r\n                        <FormControl\r\n                            className=\"recook-langkah-formcontrol\"\r\n                            placeholder=\"nama langkah\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            name=\"item\"\r\n                            type=\"text\"\r\n                            value={langkah.item}\r\n                            onChange={(event) => handleLangkahChangeInput(index, event)}\r\n                        />\r\n                        <InputGroup.Append>\r\n                        <Button\r\n                            variant=\"outline-secondary\"\r\n                            onClick={() => handleLangkahRemoveInput(index)}\r\n                        >\r\n                            hapus\r\n                        </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                    ))}\r\n                    <Button variant=\"warning\" onClick={handleLangkahAddInput}>\r\n                        tambah\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Biaya</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                        <InputGroup.Text>Rp.</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl \r\n                            aria-label=\"Amount (to the nearest dollar)\"\r\n                            value={biaya}\r\n                            onChange={(e) => setBiaya(e.target.value)}\r\n                            maxLength={2} \r\n                        />\r\n                        <InputGroup.Append>\r\n                        <InputGroup.Text>K/porsi</InputGroup.Text>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n        \r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        style={{display: 'none'}}\r\n                        ref={uploadPhoto}\r\n                        aria-describedby=\"basic-addon1\"\r\n                        type=\"file\"\r\n                        accept='image/*'\r\n                        onChange={(e) => setPhoto(e.target.files[0])}\r\n                    />\r\n                </InputGroup>\r\n\r\n                <div className='recook-form-photo'>\r\n                        {urlPhoto === '' ? (\r\n                            <p onClick={() => uploadPhoto.current.click()}>unggah foto</p>\r\n                        ) : (\r\n                            <>\r\n                                <img src={urlPhoto} alt='' />\r\n                                <p \r\n                                    className='ubah-foto'\r\n                                    onClick={() => uploadPhoto.current.click()}\r\n                                >\r\n                                    ubah foto\r\n                                </p>\r\n                            </>\r\n                        )}\r\n                </div>\r\n        \r\n                <Button\r\n                    style={{width: '100%'}}\r\n                    variant=\"warning\"\r\n                    className=\"ml-auto mr-auto\"\r\n                    onClick={onRecook}\r\n                >\r\n                    Recook\r\n                </Button>\r\n\r\n                {/* backdrop */}\r\n                <Backdrop className={classes.backdrop} open={openBackdrop}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n\r\n                {/* snackbat */}\r\n                <Snackbar open={openSnackbar} autoHideDuration={3000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity={messageType}>\r\n                        {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recook","E:\\Project\\react-kossep\\src\\assets\\index.js",[],"E:\\Project\\react-kossep\\src\\config\\Routes\\index.js",[],"E:\\Project\\react-kossep\\src\\components\\index.js",[],"E:\\Project\\react-kossep\\src\\components\\molecules\\index.js",[],"E:\\Project\\react-kossep\\src\\components\\molecules\\myNavbar\\index.js",["159"],"E:\\Project\\react-kossep\\src\\components\\molecules\\RecipeCard\\index.js",["160"],"E:\\Project\\react-kossep\\src\\components\\molecules\\MyNavbar\\index.js",["161"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ILLogo, ILNull } from \"../../../assets\";\r\nimport { Nav, Navbar, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst MyNavbar = ({ userLoginData, userLoginStatus, signOut }) => {\r\n    const history = useHistory();\r\n\r\n\r\n    return (\r\n        <div className=\"mynavbar-wrapper\">\r\n            <Navbar className=\"mynavbar\" collapseOnSelect expand=\"lg\" variant=\"dark\">\r\n                <div className=\"mynavbar-logoContainer\" onClick={() => history.push(`/halamanutama/${userLoginData.uid}`)}>\r\n                    <img src={ILLogo} />\r\n                </div>\r\n\r\n                {/* when user login true */}\r\n                {userLoginStatus && (\r\n                <DropdownButton\r\n                    className=\"ml-auto\"\r\n                    variant=\"light\"\r\n                    menuAlign=\"right\"\r\n                    title={\r\n                        userLoginData.photo ? (\r\n                            <img src={userLoginData.photo} alt=\"\" />\r\n                        ) : (\r\n                            <img src={ILNull} alt=\"\" />\r\n                        )\r\n                    }\r\n                    id=\"dropdown-menu-align-right\"\r\n                >\r\n                    <Dropdown.Item href=\"#\" onClick={() => history.push(`/halamanakun/${userLoginData.uid}`)}>\r\n                        Akun saya\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item href=\"#\" onClick={signOut}>\r\n                        Keluar\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\" onClick={() => history.push(\"/aboutus\")}>\r\n                        About us\r\n                    </Dropdown.Item>\r\n                </DropdownButton>\r\n                )}\r\n\r\n                {/* when user login false */}\r\n                {!userLoginStatus && (\r\n                <>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link href=\"#\" onClick={() => history.push(\"/buatakun\")}>\r\n                                Buat akun\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"#\" onClick={() => history.push(\"/masuk\")}>\r\n                                Masuk\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"#\" onClick={() => history.push(\"/aboutus\")}>\r\n                                About us\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </>\r\n                )}\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyNavbar;\r\n","E:\\Project\\react-kossep\\src\\components\\molecules\\SearchBar\\index.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":38,"column":8,"nodeType":"168","endLine":38,"endColumn":10,"suggestions":"169"},{"ruleId":"162","replacedBy":"170"},{"ruleId":"164","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":18,"column":12,"nodeType":"174","messageId":"175","endLine":18,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":105,"column":17,"nodeType":"178","endLine":105,"endColumn":39},{"ruleId":"176","severity":1,"message":"177","line":127,"column":21,"nodeType":"178","endLine":127,"endColumn":43},{"ruleId":"176","severity":1,"message":"177","line":21,"column":25,"nodeType":"178","endLine":21,"endColumn":48},{"ruleId":"179","severity":1,"message":"180","line":26,"column":28,"nodeType":"181","endLine":26,"endColumn":43},{"ruleId":"179","severity":1,"message":"180","line":27,"column":28,"nodeType":"181","endLine":27,"endColumn":43},{"ruleId":"176","severity":1,"message":"177","line":33,"column":25,"nodeType":"178","endLine":33,"endColumn":46},{"ruleId":"176","severity":1,"message":"177","line":43,"column":25,"nodeType":"178","endLine":43,"endColumn":47},{"ruleId":"176","severity":1,"message":"177","line":53,"column":25,"nodeType":"178","endLine":53,"endColumn":46},{"ruleId":"176","severity":1,"message":"177","line":64,"column":25,"nodeType":"178","endLine":64,"endColumn":46},{"ruleId":"179","severity":1,"message":"180","line":69,"column":28,"nodeType":"181","endLine":69,"endColumn":43},{"ruleId":"179","severity":1,"message":"180","line":70,"column":28,"nodeType":"181","endLine":70,"endColumn":43},{"ruleId":"166","severity":1,"message":"182","line":48,"column":8,"nodeType":"168","endLine":48,"endColumn":10,"suggestions":"183"},{"ruleId":"166","severity":1,"message":"184","line":79,"column":8,"nodeType":"168","endLine":79,"endColumn":10,"suggestions":"185"},{"ruleId":"172","severity":1,"message":"186","line":12,"column":21,"nodeType":"174","messageId":"175","endLine":12,"endColumn":31},{"ruleId":"172","severity":1,"message":"187","line":13,"column":12,"nodeType":"174","messageId":"175","endLine":13,"endColumn":16},{"ruleId":"166","severity":1,"message":"188","line":26,"column":8,"nodeType":"168","endLine":26,"endColumn":10,"suggestions":"189"},{"ruleId":"176","severity":1,"message":"177","line":81,"column":17,"nodeType":"178","endLine":81,"endColumn":39},{"ruleId":"172","severity":1,"message":"190","line":47,"column":11,"nodeType":"174","messageId":"175","endLine":47,"endColumn":18},{"ruleId":"172","severity":1,"message":"191","line":51,"column":12,"nodeType":"174","messageId":"175","endLine":51,"endColumn":20},{"ruleId":"166","severity":1,"message":"182","line":65,"column":8,"nodeType":"168","endLine":65,"endColumn":17,"suggestions":"192"},{"ruleId":"166","severity":1,"message":"193","line":75,"column":8,"nodeType":"168","endLine":75,"endColumn":15,"suggestions":"194"},{"ruleId":"176","severity":1,"message":"177","line":128,"column":25,"nodeType":"178","endLine":128,"endColumn":61},{"ruleId":"166","severity":1,"message":"193","line":84,"column":8,"nodeType":"168","endLine":84,"endColumn":15,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":89,"column":48,"nodeType":"198","messageId":"199","endLine":89,"endColumn":50},{"ruleId":"196","severity":1,"message":"197","line":108,"column":49,"nodeType":"198","messageId":"199","endLine":108,"endColumn":51},{"ruleId":"166","severity":1,"message":"182","line":132,"column":8,"nodeType":"168","endLine":132,"endColumn":21,"suggestions":"200"},{"ruleId":"172","severity":1,"message":"201","line":2,"column":22,"nodeType":"174","messageId":"175","endLine":2,"endColumn":31},{"ruleId":"166","severity":1,"message":"202","line":13,"column":16,"nodeType":"198","endLine":22,"endColumn":6},{"ruleId":"172","severity":1,"message":"203","line":17,"column":15,"nodeType":"174","messageId":"175","endLine":17,"endColumn":25},{"ruleId":"196","severity":1,"message":"197","line":74,"column":47,"nodeType":"198","messageId":"199","endLine":74,"endColumn":49},{"ruleId":"172","severity":1,"message":"204","line":61,"column":12,"nodeType":"174","messageId":"175","endLine":61,"endColumn":22},{"ruleId":"196","severity":1,"message":"197","line":97,"column":44,"nodeType":"198","messageId":"199","endLine":97,"endColumn":46},{"ruleId":"196","severity":1,"message":"197","line":103,"column":46,"nodeType":"198","messageId":"199","endLine":103,"endColumn":48},{"ruleId":"166","severity":1,"message":"182","line":114,"column":8,"nodeType":"168","endLine":114,"endColumn":10,"suggestions":"205"},{"ruleId":"166","severity":1,"message":"193","line":122,"column":8,"nodeType":"168","endLine":122,"endColumn":15,"suggestions":"206"},{"ruleId":"176","severity":1,"message":"177","line":15,"column":21,"nodeType":"178","endLine":15,"endColumn":41},{"ruleId":"176","severity":1,"message":"177","line":9,"column":17,"nodeType":"178","endLine":9,"endColumn":88},{"ruleId":"176","severity":1,"message":"177","line":15,"column":21,"nodeType":"178","endLine":15,"endColumn":41},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["209"],["207"],["208"],"no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has a missing dependency: 'params.key'. Either include it or remove the dependency array.",["210"],"React Hook useEffect has missing dependencies: 'orderDataFollowers' and 'params.key'. Either include them or remove the dependency array.",["211"],"'setRecipes' is assigned a value but never used.","'siap' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFollowingUid', 'history', 'params.key', and 'userLoginStatus'. Either include them or remove the dependency array.",["212"],"'history' is assigned a value but never used.","'urlPhoto' is assigned a value but never used.",["213"],"React Hook useEffect has a missing dependency: 'postImage'. Either include it or remove the dependency array.",["214"],["215"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["216"],"'useParams' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","'getRecipes' is assigned a value but never used.","'recookFrom' is assigned a value but never used.",["217"],["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"229","fix":"231"},{"desc":"232","fix":"233"},{"desc":"221","fix":"234"},{"desc":"229","fix":"235"},"Update the dependencies array to be: [history]",{"range":"236","text":"237"},"Update the dependencies array to be: [params.key]",{"range":"238","text":"239"},"Update the dependencies array to be: [orderDataFollowers, params.key]",{"range":"240","text":"241"},"Update the dependencies array to be: [getFollowingUid, history, params.key, userLoginStatus]",{"range":"242","text":"243"},"Update the dependencies array to be: [params.key, setOpen]",{"range":"244","text":"245"},"Update the dependencies array to be: [photo, postImage]",{"range":"246","text":"247"},{"range":"248","text":"247"},"Update the dependencies array to be: [params.key, recookParam]",{"range":"249","text":"250"},{"range":"251","text":"239"},{"range":"252","text":"247"},[1545,1547],"[history]",[1516,1518],"[params.key]",[2386,2388],"[orderDataFollowers, params.key]",[906,908],"[getFollowingUid, history, params.key, userLoginStatus]",[2095,2104],"[params.key, setOpen]",[2295,2302],"[photo, postImage]",[2435,2442],[4290,4303],"[params.key, recookParam]",[3676,3678],[3813,3820]]